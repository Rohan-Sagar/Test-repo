{"ast":null,"code":"import { ModelObject3D } from './object.js';\nexport class Mesh extends ModelObject3D {\n  constructor() {\n    super();\n    this.vertices = [];\n    this.vertexColors = [];\n    this.normals = [];\n    this.uvs = [];\n    this.triangles = [];\n  }\n\n  VertexCount() {\n    return this.vertices.length;\n  }\n\n  VertexColorCount() {\n    return this.vertexColors.length;\n  }\n\n  NormalCount() {\n    return this.normals.length;\n  }\n\n  TextureUVCount() {\n    return this.uvs.length;\n  }\n\n  TriangleCount() {\n    return this.triangles.length;\n  }\n\n  AddVertex(vertex) {\n    this.vertices.push(vertex);\n    return this.vertices.length - 1;\n  }\n\n  SetVertex(index, vertex) {\n    this.vertices[index] = vertex;\n  }\n\n  GetVertex(index) {\n    return this.vertices[index];\n  }\n\n  AddVertexColor(color) {\n    this.vertexColors.push(color);\n    return this.vertexColors.length - 1;\n  }\n\n  SetVertexColor(index, color) {\n    this.vertexColors[index] = color;\n  }\n\n  GetVertexColor(index) {\n    return this.vertexColors[index];\n  }\n\n  AddNormal(normal) {\n    this.normals.push(normal);\n    return this.normals.length - 1;\n  }\n\n  SetNormal(index, normal) {\n    this.normals[index] = normal;\n  }\n\n  GetNormal(index) {\n    return this.normals[index];\n  }\n\n  AddTextureUV(uv) {\n    this.uvs.push(uv);\n    return this.uvs.length - 1;\n  }\n\n  SetTextureUV(index, uv) {\n    this.uvs[index] = uv;\n  }\n\n  GetTextureUV(index) {\n    return this.uvs[index];\n  }\n\n  AddTriangle(triangle) {\n    this.triangles.push(triangle);\n    return this.triangles.length - 1;\n  }\n\n  GetTriangle(index) {\n    return this.triangles[index];\n  }\n\n  EnumerateVertices(onVertex) {\n    for (const vertex of this.vertices) {\n      onVertex(vertex);\n    }\n  }\n\n  EnumerateTriangleVertexIndices(onTriangleVertexIndices) {\n    for (const triangle of this.triangles) {\n      onTriangleVertexIndices(triangle.v0, triangle.v1, triangle.v2);\n    }\n  }\n\n  EnumerateTriangleVertices(onTriangleVertices) {\n    for (const triangle of this.triangles) {\n      let v0 = this.vertices[triangle.v0];\n      let v1 = this.vertices[triangle.v1];\n      let v2 = this.vertices[triangle.v2];\n      onTriangleVertices(v0, v1, v2);\n    }\n  }\n\n  Clone() {\n    let cloned = new Mesh();\n    cloned.SetName(this.GetName());\n    this.CloneProperties(cloned);\n\n    for (let i = 0; i < this.VertexCount(); i++) {\n      let vertex = this.GetVertex(i);\n      cloned.AddVertex(vertex.Clone());\n    }\n\n    for (let i = 0; i < this.VertexColorCount(); i++) {\n      let color = this.GetVertexColor(i);\n      cloned.AddVertexColor(color.Clone());\n    }\n\n    for (let i = 0; i < this.NormalCount(); i++) {\n      let normal = this.GetNormal(i);\n      cloned.AddNormal(normal.Clone());\n    }\n\n    for (let i = 0; i < this.TextureUVCount(); i++) {\n      let uv = this.GetTextureUV(i);\n      cloned.AddTextureUV(uv.Clone());\n    }\n\n    for (let i = 0; i < this.TriangleCount(); i++) {\n      let triangle = this.GetTriangle(i);\n      cloned.AddTriangle(triangle.Clone());\n    }\n\n    return cloned;\n  }\n\n}","map":{"version":3,"names":["ModelObject3D","Mesh","constructor","vertices","vertexColors","normals","uvs","triangles","VertexCount","length","VertexColorCount","NormalCount","TextureUVCount","TriangleCount","AddVertex","vertex","push","SetVertex","index","GetVertex","AddVertexColor","color","SetVertexColor","GetVertexColor","AddNormal","normal","SetNormal","GetNormal","AddTextureUV","uv","SetTextureUV","GetTextureUV","AddTriangle","triangle","GetTriangle","EnumerateVertices","onVertex","EnumerateTriangleVertexIndices","onTriangleVertexIndices","v0","v1","v2","EnumerateTriangleVertices","onTriangleVertices","Clone","cloned","SetName","GetName","CloneProperties","i"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/model/mesh.js"],"sourcesContent":["import { ModelObject3D } from './object.js';\r\n\r\nexport class Mesh extends ModelObject3D\r\n{\r\n    constructor ()\r\n    {\r\n        super ();\r\n        this.vertices = [];\r\n        this.vertexColors = [];\r\n        this.normals = [];\r\n        this.uvs = [];\r\n        this.triangles = [];\r\n    }\r\n\r\n    VertexCount ()\r\n    {\r\n        return this.vertices.length;\r\n    }\r\n\r\n    VertexColorCount ()\r\n    {\r\n        return this.vertexColors.length;\r\n    }\r\n\r\n    NormalCount ()\r\n    {\r\n        return this.normals.length;\r\n    }\r\n\r\n    TextureUVCount ()\r\n    {\r\n        return this.uvs.length;\r\n    }\r\n\r\n    TriangleCount ()\r\n    {\r\n        return this.triangles.length;\r\n    }\r\n\r\n    AddVertex (vertex)\r\n    {\r\n        this.vertices.push (vertex);\r\n        return this.vertices.length - 1;\r\n    }\r\n\r\n    SetVertex (index, vertex)\r\n    {\r\n        this.vertices[index] = vertex;\r\n    }\r\n\r\n    GetVertex (index)\r\n    {\r\n        return this.vertices[index];\r\n    }\r\n\r\n    AddVertexColor (color)\r\n    {\r\n        this.vertexColors.push (color);\r\n        return this.vertexColors.length - 1;\r\n    }\r\n\r\n    SetVertexColor (index, color)\r\n    {\r\n        this.vertexColors[index] = color;\r\n    }\r\n\r\n    GetVertexColor (index)\r\n    {\r\n        return this.vertexColors[index];\r\n    }\r\n\r\n    AddNormal (normal)\r\n    {\r\n        this.normals.push (normal);\r\n        return this.normals.length - 1;\r\n    }\r\n\r\n    SetNormal (index, normal)\r\n    {\r\n        this.normals[index] = normal;\r\n    }\r\n\r\n    GetNormal (index)\r\n    {\r\n        return this.normals[index];\r\n    }\r\n\r\n    AddTextureUV (uv)\r\n    {\r\n        this.uvs.push (uv);\r\n        return this.uvs.length - 1;\r\n    }\r\n\r\n    SetTextureUV (index, uv)\r\n    {\r\n        this.uvs[index] = uv;\r\n    }\r\n\r\n    GetTextureUV (index)\r\n    {\r\n        return this.uvs[index];\r\n    }\r\n\r\n    AddTriangle (triangle)\r\n    {\r\n        this.triangles.push (triangle);\r\n        return this.triangles.length - 1;\r\n    }\r\n\r\n    GetTriangle (index)\r\n    {\r\n        return this.triangles[index];\r\n    }\r\n\r\n    EnumerateVertices (onVertex)\r\n    {\r\n        for (const vertex of this.vertices) {\r\n            onVertex (vertex);\r\n        }\r\n    }\r\n\r\n    EnumerateTriangleVertexIndices (onTriangleVertexIndices)\r\n    {\r\n        for (const triangle of this.triangles) {\r\n            onTriangleVertexIndices (triangle.v0, triangle.v1, triangle.v2);\r\n        }\r\n    }\r\n\r\n    EnumerateTriangleVertices (onTriangleVertices)\r\n    {\r\n        for (const triangle of this.triangles) {\r\n            let v0 = this.vertices[triangle.v0];\r\n            let v1 = this.vertices[triangle.v1];\r\n            let v2 = this.vertices[triangle.v2];\r\n            onTriangleVertices (v0, v1, v2);\r\n        }\r\n    }\r\n\r\n    Clone ()\r\n    {\r\n        let cloned = new Mesh ();\r\n\r\n        cloned.SetName (this.GetName ());\r\n        this.CloneProperties (cloned);\r\n\r\n        for (let i = 0; i < this.VertexCount (); i++) {\r\n            let vertex = this.GetVertex (i);\r\n            cloned.AddVertex (vertex.Clone ());\r\n        }\r\n\r\n        for (let i = 0; i < this.VertexColorCount (); i++) {\r\n            let color = this.GetVertexColor (i);\r\n            cloned.AddVertexColor (color.Clone ());\r\n        }\r\n\r\n        for (let i = 0; i < this.NormalCount (); i++) {\r\n            let normal = this.GetNormal (i);\r\n            cloned.AddNormal (normal.Clone ());\r\n        }\r\n\r\n        for (let i = 0; i < this.TextureUVCount (); i++) {\r\n            let uv = this.GetTextureUV (i);\r\n            cloned.AddTextureUV (uv.Clone ());\r\n        }\r\n\r\n        for (let i = 0; i < this.TriangleCount (); i++) {\r\n            let triangle = this.GetTriangle (i);\r\n            cloned.AddTriangle (triangle.Clone ());\r\n        }\r\n\r\n        return cloned;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,IAAN,SAAmBD,aAAnB,CACP;EACIE,WAAW,GACX;IACI;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,OAAL,GAAe,EAAf;IACA,KAAKC,GAAL,GAAW,EAAX;IACA,KAAKC,SAAL,GAAiB,EAAjB;EACH;;EAEDC,WAAW,GACX;IACI,OAAO,KAAKL,QAAL,CAAcM,MAArB;EACH;;EAEDC,gBAAgB,GAChB;IACI,OAAO,KAAKN,YAAL,CAAkBK,MAAzB;EACH;;EAEDE,WAAW,GACX;IACI,OAAO,KAAKN,OAAL,CAAaI,MAApB;EACH;;EAEDG,cAAc,GACd;IACI,OAAO,KAAKN,GAAL,CAASG,MAAhB;EACH;;EAEDI,aAAa,GACb;IACI,OAAO,KAAKN,SAAL,CAAeE,MAAtB;EACH;;EAEDK,SAAS,CAAEC,MAAF,EACT;IACI,KAAKZ,QAAL,CAAca,IAAd,CAAoBD,MAApB;IACA,OAAO,KAAKZ,QAAL,CAAcM,MAAd,GAAuB,CAA9B;EACH;;EAEDQ,SAAS,CAAEC,KAAF,EAASH,MAAT,EACT;IACI,KAAKZ,QAAL,CAAce,KAAd,IAAuBH,MAAvB;EACH;;EAEDI,SAAS,CAAED,KAAF,EACT;IACI,OAAO,KAAKf,QAAL,CAAce,KAAd,CAAP;EACH;;EAEDE,cAAc,CAAEC,KAAF,EACd;IACI,KAAKjB,YAAL,CAAkBY,IAAlB,CAAwBK,KAAxB;IACA,OAAO,KAAKjB,YAAL,CAAkBK,MAAlB,GAA2B,CAAlC;EACH;;EAEDa,cAAc,CAAEJ,KAAF,EAASG,KAAT,EACd;IACI,KAAKjB,YAAL,CAAkBc,KAAlB,IAA2BG,KAA3B;EACH;;EAEDE,cAAc,CAAEL,KAAF,EACd;IACI,OAAO,KAAKd,YAAL,CAAkBc,KAAlB,CAAP;EACH;;EAEDM,SAAS,CAAEC,MAAF,EACT;IACI,KAAKpB,OAAL,CAAaW,IAAb,CAAmBS,MAAnB;IACA,OAAO,KAAKpB,OAAL,CAAaI,MAAb,GAAsB,CAA7B;EACH;;EAEDiB,SAAS,CAAER,KAAF,EAASO,MAAT,EACT;IACI,KAAKpB,OAAL,CAAaa,KAAb,IAAsBO,MAAtB;EACH;;EAEDE,SAAS,CAAET,KAAF,EACT;IACI,OAAO,KAAKb,OAAL,CAAaa,KAAb,CAAP;EACH;;EAEDU,YAAY,CAAEC,EAAF,EACZ;IACI,KAAKvB,GAAL,CAASU,IAAT,CAAea,EAAf;IACA,OAAO,KAAKvB,GAAL,CAASG,MAAT,GAAkB,CAAzB;EACH;;EAEDqB,YAAY,CAAEZ,KAAF,EAASW,EAAT,EACZ;IACI,KAAKvB,GAAL,CAASY,KAAT,IAAkBW,EAAlB;EACH;;EAEDE,YAAY,CAAEb,KAAF,EACZ;IACI,OAAO,KAAKZ,GAAL,CAASY,KAAT,CAAP;EACH;;EAEDc,WAAW,CAAEC,QAAF,EACX;IACI,KAAK1B,SAAL,CAAeS,IAAf,CAAqBiB,QAArB;IACA,OAAO,KAAK1B,SAAL,CAAeE,MAAf,GAAwB,CAA/B;EACH;;EAEDyB,WAAW,CAAEhB,KAAF,EACX;IACI,OAAO,KAAKX,SAAL,CAAeW,KAAf,CAAP;EACH;;EAEDiB,iBAAiB,CAAEC,QAAF,EACjB;IACI,KAAK,MAAMrB,MAAX,IAAqB,KAAKZ,QAA1B,EAAoC;MAChCiC,QAAQ,CAAErB,MAAF,CAAR;IACH;EACJ;;EAEDsB,8BAA8B,CAAEC,uBAAF,EAC9B;IACI,KAAK,MAAML,QAAX,IAAuB,KAAK1B,SAA5B,EAAuC;MACnC+B,uBAAuB,CAAEL,QAAQ,CAACM,EAAX,EAAeN,QAAQ,CAACO,EAAxB,EAA4BP,QAAQ,CAACQ,EAArC,CAAvB;IACH;EACJ;;EAEDC,yBAAyB,CAAEC,kBAAF,EACzB;IACI,KAAK,MAAMV,QAAX,IAAuB,KAAK1B,SAA5B,EAAuC;MACnC,IAAIgC,EAAE,GAAG,KAAKpC,QAAL,CAAc8B,QAAQ,CAACM,EAAvB,CAAT;MACA,IAAIC,EAAE,GAAG,KAAKrC,QAAL,CAAc8B,QAAQ,CAACO,EAAvB,CAAT;MACA,IAAIC,EAAE,GAAG,KAAKtC,QAAL,CAAc8B,QAAQ,CAACQ,EAAvB,CAAT;MACAE,kBAAkB,CAAEJ,EAAF,EAAMC,EAAN,EAAUC,EAAV,CAAlB;IACH;EACJ;;EAEDG,KAAK,GACL;IACI,IAAIC,MAAM,GAAG,IAAI5C,IAAJ,EAAb;IAEA4C,MAAM,CAACC,OAAP,CAAgB,KAAKC,OAAL,EAAhB;IACA,KAAKC,eAAL,CAAsBH,MAAtB;;IAEA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzC,WAAL,EAApB,EAAyCyC,CAAC,EAA1C,EAA8C;MAC1C,IAAIlC,MAAM,GAAG,KAAKI,SAAL,CAAgB8B,CAAhB,CAAb;MACAJ,MAAM,CAAC/B,SAAP,CAAkBC,MAAM,CAAC6B,KAAP,EAAlB;IACH;;IAED,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvC,gBAAL,EAApB,EAA8CuC,CAAC,EAA/C,EAAmD;MAC/C,IAAI5B,KAAK,GAAG,KAAKE,cAAL,CAAqB0B,CAArB,CAAZ;MACAJ,MAAM,CAACzB,cAAP,CAAuBC,KAAK,CAACuB,KAAN,EAAvB;IACH;;IAED,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtC,WAAL,EAApB,EAAyCsC,CAAC,EAA1C,EAA8C;MAC1C,IAAIxB,MAAM,GAAG,KAAKE,SAAL,CAAgBsB,CAAhB,CAAb;MACAJ,MAAM,CAACrB,SAAP,CAAkBC,MAAM,CAACmB,KAAP,EAAlB;IACH;;IAED,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrC,cAAL,EAApB,EAA4CqC,CAAC,EAA7C,EAAiD;MAC7C,IAAIpB,EAAE,GAAG,KAAKE,YAAL,CAAmBkB,CAAnB,CAAT;MACAJ,MAAM,CAACjB,YAAP,CAAqBC,EAAE,CAACe,KAAH,EAArB;IACH;;IAED,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpC,aAAL,EAApB,EAA2CoC,CAAC,EAA5C,EAAgD;MAC5C,IAAIhB,QAAQ,GAAG,KAAKC,WAAL,CAAkBe,CAAlB,CAAf;MACAJ,MAAM,CAACb,WAAP,CAAoBC,QAAQ,CAACW,KAAT,EAApB;IACH;;IAED,OAAOC,MAAP;EACH;;AAxKL"},"metadata":{},"sourceType":"module"}