{"ast":null,"code":"import { Coord2D, CoordDistance2D, SubCoord2D } from '../geometry/coord2d.js';\nimport { CoordDistance3D, CrossVector3D, SubCoord3D, VectorAngle3D } from '../geometry/coord3d.js';\nimport { DegRad, IsGreater, IsLower, IsZero } from '../geometry/geometry.js';\nimport { ParabolicTweenFunction, TweenCoord3D } from '../geometry/tween.js';\nimport { CameraIsEqual3D } from './camera.js';\nimport { GetDomElementClientCoordinates } from './domutils.js';\nexport class MouseInteraction {\n  constructor() {\n    this.prev = new Coord2D(0.0, 0.0);\n    this.curr = new Coord2D(0.0, 0.0);\n    this.diff = new Coord2D(0.0, 0.0);\n    this.buttons = [];\n  }\n\n  Down(canvas, ev) {\n    this.buttons.push(ev.which);\n    this.curr = this.GetPositionFromEvent(canvas, ev);\n    this.prev = this.curr.Clone();\n  }\n\n  Move(canvas, ev) {\n    this.curr = this.GetPositionFromEvent(canvas, ev);\n    this.diff = SubCoord2D(this.curr, this.prev);\n    this.prev = this.curr.Clone();\n  }\n\n  Up(canvas, ev) {\n    let buttonIndex = this.buttons.indexOf(ev.which);\n\n    if (buttonIndex !== -1) {\n      this.buttons.splice(buttonIndex, 1);\n    }\n\n    this.curr = this.GetPositionFromEvent(canvas, ev);\n  }\n\n  Leave(canvas, ev) {\n    this.buttons = [];\n    this.curr = this.GetPositionFromEvent(canvas, ev);\n  }\n\n  IsButtonDown() {\n    return this.buttons.length > 0;\n  }\n\n  GetButton() {\n    let length = this.buttons.length;\n\n    if (length === 0) {\n      return 0;\n    }\n\n    return this.buttons[length - 1];\n  }\n\n  GetPosition() {\n    return this.curr;\n  }\n\n  GetMoveDiff() {\n    return this.diff;\n  }\n\n  GetPositionFromEvent(canvas, ev) {\n    return GetDomElementClientCoordinates(canvas, ev.clientX, ev.clientY);\n  }\n\n}\nexport class TouchInteraction {\n  constructor() {\n    this.prevPos = new Coord2D(0.0, 0.0);\n    this.currPos = new Coord2D(0.0, 0.0);\n    this.diffPos = new Coord2D(0.0, 0.0);\n    this.prevDist = 0.0;\n    this.currDist = 0.0;\n    this.diffDist = 0.0;\n    this.fingers = 0;\n  }\n\n  Start(canvas, ev) {\n    if (ev.touches.length === 0) {\n      return;\n    }\n\n    this.fingers = ev.touches.length;\n    this.currPos = this.GetPositionFromEvent(canvas, ev);\n    this.prevPos = this.currPos.Clone();\n    this.currDist = this.GetTouchDistanceFromEvent(canvas, ev);\n    this.prevDist = this.currDist;\n  }\n\n  Move(canvas, ev) {\n    if (ev.touches.length === 0) {\n      return;\n    }\n\n    this.currPos = this.GetPositionFromEvent(canvas, ev);\n    this.diffPos = SubCoord2D(this.currPos, this.prevPos);\n    this.prevPos = this.currPos.Clone();\n    this.currDist = this.GetTouchDistanceFromEvent(canvas, ev);\n    this.diffDist = this.currDist - this.prevDist;\n    this.prevDist = this.currDist;\n  }\n\n  End(canvas, ev) {\n    if (ev.touches.length === 0) {\n      return;\n    }\n\n    this.fingers = 0;\n    this.currPos = this.GetPositionFromEvent(canvas, ev);\n    this.currDist = this.GetTouchDistanceFromEvent(canvas, ev);\n  }\n\n  IsFingerDown() {\n    return this.fingers !== 0;\n  }\n\n  GetFingerCount() {\n    return this.fingers;\n  }\n\n  GetPosition() {\n    return this.currPos;\n  }\n\n  GetMoveDiff() {\n    return this.diffPos;\n  }\n\n  GetDistanceDiff() {\n    return this.diffDist;\n  }\n\n  GetPositionFromEvent(canvas, ev) {\n    let coord = null;\n\n    if (ev.touches.length !== 0) {\n      let touchEv = ev.touches[0];\n      coord = GetDomElementClientCoordinates(canvas, touchEv.pageX, touchEv.pageY);\n    }\n\n    return coord;\n  }\n\n  GetTouchDistanceFromEvent(canvas, ev) {\n    if (ev.touches.length !== 2) {\n      return 0.0;\n    }\n\n    let touchEv1 = ev.touches[0];\n    let touchEv2 = ev.touches[1];\n    let distance = CoordDistance2D(GetDomElementClientCoordinates(canvas, touchEv1.pageX, touchEv1.pageY), GetDomElementClientCoordinates(canvas, touchEv2.pageX, touchEv2.pageY));\n    return distance;\n  }\n\n}\nexport class ClickDetector {\n  constructor() {\n    this.isClick = false;\n    this.startPosition = null;\n  }\n\n  Start(startPosition) {\n    this.isClick = true;\n    this.startPosition = startPosition;\n  }\n\n  Move(currentPosition) {\n    if (!this.isClick) {\n      return;\n    }\n\n    if (this.startPosition !== null) {\n      const maxClickDistance = 3.0;\n      const currentDistance = CoordDistance2D(this.startPosition, currentPosition);\n\n      if (currentDistance > maxClickDistance) {\n        this.Cancel();\n      }\n    } else {\n      this.Cancel();\n    }\n  }\n\n  End() {\n    this.startPosition = null;\n  }\n\n  Cancel() {\n    this.isClick = false;\n    this.startPosition = null;\n  }\n\n  IsClick() {\n    return this.isClick;\n  }\n\n}\nexport const NavigationType = {\n  None: 0,\n  Orbit: 1,\n  Pan: 2,\n  Zoom: 3\n};\nexport class Navigation {\n  constructor(canvas, camera, callbacks) {\n    this.canvas = canvas;\n    this.camera = camera;\n    this.callbacks = callbacks;\n    this.fixUpVector = true;\n    this.mouse = new MouseInteraction();\n    this.touch = new TouchInteraction();\n    this.clickDetector = new ClickDetector();\n    this.onMouseClick = null;\n    this.onMouseMove = null;\n    this.onContext = null;\n\n    if (this.canvas.addEventListener) {\n      this.canvas.addEventListener('mousedown', this.OnMouseDown.bind(this));\n      this.canvas.addEventListener('wheel', this.OnMouseWheel.bind(this));\n      this.canvas.addEventListener('touchstart', this.OnTouchStart.bind(this));\n      this.canvas.addEventListener('touchmove', this.OnTouchMove.bind(this));\n      this.canvas.addEventListener('touchcancel', this.OnTouchEnd.bind(this));\n      this.canvas.addEventListener('touchend', this.OnTouchEnd.bind(this));\n      this.canvas.addEventListener('contextmenu', this.OnContextMenu.bind(this));\n    }\n\n    if (document.addEventListener) {\n      document.addEventListener('mousemove', this.OnMouseMove.bind(this));\n      document.addEventListener('mouseup', this.OnMouseUp.bind(this));\n      document.addEventListener('mouseleave', this.OnMouseLeave.bind(this));\n    }\n  }\n\n  SetMouseClickHandler(onMouseClick) {\n    this.onMouseClick = onMouseClick;\n  }\n\n  SetMouseMoveHandler(onMouseMove) {\n    this.onMouseMove = onMouseMove;\n  }\n\n  SetContextMenuHandler(onContext) {\n    this.onContext = onContext;\n  }\n\n  IsFixUpVector() {\n    return this.fixUpVector;\n  }\n\n  SetFixUpVector(fixUpVector) {\n    this.fixUpVector = fixUpVector;\n  }\n\n  GetCamera() {\n    return this.camera;\n  }\n\n  SetCamera(camera) {\n    this.camera = camera;\n  }\n\n  MoveCamera(newCamera, stepCount) {\n    function Step(obj, steps, count, index) {\n      obj.camera.eye = steps.eye[index];\n      obj.camera.center = steps.center[index];\n      obj.camera.up = steps.up[index];\n      obj.Update();\n\n      if (index < count - 1) {\n        requestAnimationFrame(() => {\n          Step(obj, steps, count, index + 1);\n        });\n      }\n    }\n\n    if (newCamera === null) {\n      return;\n    }\n\n    if (stepCount === 0 || CameraIsEqual3D(this.camera, newCamera)) {\n      this.camera = newCamera;\n    } else {\n      let tweenFunc = ParabolicTweenFunction;\n      let steps = {\n        eye: TweenCoord3D(this.camera.eye, newCamera.eye, stepCount, tweenFunc),\n        center: TweenCoord3D(this.camera.center, newCamera.center, stepCount, tweenFunc),\n        up: TweenCoord3D(this.camera.up, newCamera.up, stepCount, tweenFunc)\n      };\n      requestAnimationFrame(() => {\n        Step(this, steps, stepCount, 0);\n      });\n    }\n\n    this.Update();\n  }\n\n  GetFitToSphereCamera(center, radius) {\n    if (IsZero(radius)) {\n      return null;\n    }\n\n    let fitCamera = this.camera.Clone();\n    let offsetToOrigo = SubCoord3D(fitCamera.center, center);\n    fitCamera.eye = SubCoord3D(fitCamera.eye, offsetToOrigo);\n    fitCamera.center = center.Clone();\n    let centerEyeDirection = SubCoord3D(fitCamera.eye, fitCamera.center).Normalize();\n    let fieldOfView = this.camera.fov / 2.0;\n\n    if (this.canvas.width < this.canvas.height) {\n      fieldOfView = fieldOfView * this.canvas.width / this.canvas.height;\n    }\n\n    let distance = radius / Math.sin(fieldOfView * DegRad);\n    fitCamera.eye = fitCamera.center.Clone().Offset(centerEyeDirection, distance);\n    return fitCamera;\n  }\n\n  OnMouseDown(ev) {\n    ev.preventDefault();\n    this.mouse.Down(this.canvas, ev);\n    this.clickDetector.Start(this.mouse.GetPosition());\n  }\n\n  OnMouseMove(ev) {\n    this.mouse.Move(this.canvas, ev);\n    this.clickDetector.Move(this.mouse.GetPosition());\n\n    if (this.onMouseMove) {\n      let mouseCoords = GetDomElementClientCoordinates(this.canvas, ev.clientX, ev.clientY);\n      this.onMouseMove(mouseCoords);\n    }\n\n    if (!this.mouse.IsButtonDown()) {\n      return;\n    }\n\n    let moveDiff = this.mouse.GetMoveDiff();\n    let mouseButton = this.mouse.GetButton();\n    let navigationType = NavigationType.None;\n\n    if (mouseButton === 1) {\n      if (ev.ctrlKey) {\n        navigationType = NavigationType.Zoom;\n      } else if (ev.shiftKey) {\n        navigationType = NavigationType.Pan;\n      } else {\n        navigationType = NavigationType.Orbit;\n      }\n    } else if (mouseButton === 2 || mouseButton === 3) {\n      navigationType = NavigationType.Pan;\n    }\n\n    if (navigationType === NavigationType.Orbit) {\n      let orbitRatio = 0.5;\n      this.Orbit(moveDiff.x * orbitRatio, moveDiff.y * orbitRatio);\n    } else if (navigationType === NavigationType.Pan) {\n      let eyeCenterDistance = CoordDistance3D(this.camera.eye, this.camera.center);\n      let panRatio = 0.001 * eyeCenterDistance;\n      this.Pan(moveDiff.x * panRatio, moveDiff.y * panRatio);\n    } else if (navigationType === NavigationType.Zoom) {\n      let zoomRatio = 0.005;\n      this.Zoom(-moveDiff.y * zoomRatio);\n    }\n\n    this.Update();\n  }\n\n  OnMouseUp(ev) {\n    this.mouse.Up(this.canvas, ev);\n    this.clickDetector.End();\n\n    if (this.clickDetector.IsClick()) {\n      let mouseCoords = this.mouse.GetPosition();\n      this.Click(ev.which, mouseCoords);\n    }\n  }\n\n  OnMouseLeave(ev) {\n    this.mouse.Leave(this.canvas, ev);\n    this.clickDetector.Cancel();\n  }\n\n  OnTouchStart(ev) {\n    ev.preventDefault();\n    this.touch.Start(this.canvas, ev);\n    this.clickDetector.Start(this.touch.GetPosition());\n  }\n\n  OnTouchMove(ev) {\n    ev.preventDefault();\n    this.touch.Move(this.canvas, ev);\n    this.clickDetector.Move(this.touch.GetPosition());\n\n    if (!this.touch.IsFingerDown()) {\n      return;\n    }\n\n    let moveDiff = this.touch.GetMoveDiff();\n    let distanceDiff = this.touch.GetDistanceDiff();\n    let fingerCount = this.touch.GetFingerCount();\n    let navigationType = NavigationType.None;\n\n    if (fingerCount === 1) {\n      navigationType = NavigationType.Orbit;\n    } else if (fingerCount === 2) {\n      navigationType = NavigationType.Pan;\n    }\n\n    if (navigationType === NavigationType.Orbit) {\n      let orbitRatio = 0.5;\n      this.Orbit(moveDiff.x * orbitRatio, moveDiff.y * orbitRatio);\n    } else if (navigationType === NavigationType.Pan) {\n      let zoomRatio = 0.005;\n      this.Zoom(distanceDiff * zoomRatio);\n      let panRatio = 0.001 * CoordDistance3D(this.camera.eye, this.camera.center);\n      this.Pan(moveDiff.x * panRatio, moveDiff.y * panRatio);\n    }\n\n    this.Update();\n  }\n\n  OnTouchEnd(ev) {\n    ev.preventDefault();\n    this.touch.End(this.canvas, ev);\n    this.clickDetector.End();\n\n    if (this.clickDetector.IsClick()) {\n      let touchCoords = this.touch.GetPosition();\n\n      if (this.touch.GetFingerCount() === 1) {\n        this.Click(1, touchCoords);\n      }\n    }\n  }\n\n  OnMouseWheel(ev) {\n    let params = ev || window.event;\n    params.preventDefault();\n    let delta = -params.deltaY / 40;\n    let ratio = 0.1;\n\n    if (delta < 0) {\n      ratio = ratio * -1.0;\n    }\n\n    this.Zoom(ratio);\n    this.Update();\n  }\n\n  OnContextMenu(ev) {\n    ev.preventDefault();\n\n    if (this.clickDetector.IsClick()) {\n      this.Context(ev.clientX, ev.clientY);\n      this.clickDetector.Cancel();\n    }\n  }\n\n  Orbit(angleX, angleY) {\n    let radAngleX = angleX * DegRad;\n    let radAngleY = angleY * DegRad;\n    let viewDirection = SubCoord3D(this.camera.center, this.camera.eye).Normalize();\n    let horizontalDirection = CrossVector3D(viewDirection, this.camera.up).Normalize();\n\n    if (this.fixUpVector) {\n      let originalAngle = VectorAngle3D(viewDirection, this.camera.up);\n      let newAngle = originalAngle + radAngleY;\n\n      if (IsGreater(newAngle, 0.0) && IsLower(newAngle, Math.PI)) {\n        this.camera.eye.Rotate(horizontalDirection, -radAngleY, this.camera.center);\n      }\n\n      this.camera.eye.Rotate(this.camera.up, -radAngleX, this.camera.center);\n    } else {\n      let verticalDirection = CrossVector3D(horizontalDirection, viewDirection).Normalize();\n      this.camera.eye.Rotate(horizontalDirection, -radAngleY, this.camera.center);\n      this.camera.eye.Rotate(verticalDirection, -radAngleX, this.camera.center);\n      this.camera.up = verticalDirection;\n    }\n  }\n\n  Pan(moveX, moveY) {\n    let viewDirection = SubCoord3D(this.camera.center, this.camera.eye).Normalize();\n    let horizontalDirection = CrossVector3D(viewDirection, this.camera.up).Normalize();\n    let verticalDirection = CrossVector3D(horizontalDirection, viewDirection).Normalize();\n    this.camera.eye.Offset(horizontalDirection, -moveX);\n    this.camera.center.Offset(horizontalDirection, -moveX);\n    this.camera.eye.Offset(verticalDirection, moveY);\n    this.camera.center.Offset(verticalDirection, moveY);\n  }\n\n  Zoom(ratio) {\n    let direction = SubCoord3D(this.camera.center, this.camera.eye);\n    let distance = direction.Length();\n    let move = distance * ratio;\n    this.camera.eye.Offset(direction, move);\n  }\n\n  Update() {\n    this.callbacks.onUpdate();\n  }\n\n  Click(button, mouseCoords) {\n    if (this.onMouseClick) {\n      this.onMouseClick(button, mouseCoords);\n    }\n  }\n\n  Context(clientX, clientY) {\n    if (this.onContext) {\n      let globalCoords = {\n        x: clientX,\n        y: clientY\n      };\n      let localCoords = GetDomElementClientCoordinates(this.canvas, clientX, clientY);\n      this.onContext(globalCoords, localCoords);\n    }\n  }\n\n}","map":{"version":3,"names":["Coord2D","CoordDistance2D","SubCoord2D","CoordDistance3D","CrossVector3D","SubCoord3D","VectorAngle3D","DegRad","IsGreater","IsLower","IsZero","ParabolicTweenFunction","TweenCoord3D","CameraIsEqual3D","GetDomElementClientCoordinates","MouseInteraction","constructor","prev","curr","diff","buttons","Down","canvas","ev","push","which","GetPositionFromEvent","Clone","Move","Up","buttonIndex","indexOf","splice","Leave","IsButtonDown","length","GetButton","GetPosition","GetMoveDiff","clientX","clientY","TouchInteraction","prevPos","currPos","diffPos","prevDist","currDist","diffDist","fingers","Start","touches","GetTouchDistanceFromEvent","End","IsFingerDown","GetFingerCount","GetDistanceDiff","coord","touchEv","pageX","pageY","touchEv1","touchEv2","distance","ClickDetector","isClick","startPosition","currentPosition","maxClickDistance","currentDistance","Cancel","IsClick","NavigationType","None","Orbit","Pan","Zoom","Navigation","camera","callbacks","fixUpVector","mouse","touch","clickDetector","onMouseClick","onMouseMove","onContext","addEventListener","OnMouseDown","bind","OnMouseWheel","OnTouchStart","OnTouchMove","OnTouchEnd","OnContextMenu","document","OnMouseMove","OnMouseUp","OnMouseLeave","SetMouseClickHandler","SetMouseMoveHandler","SetContextMenuHandler","IsFixUpVector","SetFixUpVector","GetCamera","SetCamera","MoveCamera","newCamera","stepCount","Step","obj","steps","count","index","eye","center","up","Update","requestAnimationFrame","tweenFunc","GetFitToSphereCamera","radius","fitCamera","offsetToOrigo","centerEyeDirection","Normalize","fieldOfView","fov","width","height","Math","sin","Offset","preventDefault","mouseCoords","moveDiff","mouseButton","navigationType","ctrlKey","shiftKey","orbitRatio","x","y","eyeCenterDistance","panRatio","zoomRatio","Click","distanceDiff","fingerCount","touchCoords","params","window","event","delta","deltaY","ratio","Context","angleX","angleY","radAngleX","radAngleY","viewDirection","horizontalDirection","originalAngle","newAngle","PI","Rotate","verticalDirection","moveX","moveY","direction","Length","move","onUpdate","button","globalCoords","localCoords"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/viewer/navigation.js"],"sourcesContent":["import { Coord2D, CoordDistance2D, SubCoord2D } from '../geometry/coord2d.js';\r\nimport { CoordDistance3D, CrossVector3D, SubCoord3D, VectorAngle3D } from '../geometry/coord3d.js';\r\nimport { DegRad, IsGreater, IsLower, IsZero } from '../geometry/geometry.js';\r\nimport { ParabolicTweenFunction, TweenCoord3D } from '../geometry/tween.js';\r\nimport { CameraIsEqual3D } from './camera.js';\r\nimport { GetDomElementClientCoordinates } from './domutils.js';\r\n\r\nexport class MouseInteraction\r\n{\r\n    constructor ()\r\n    {\r\n        this.prev = new Coord2D (0.0, 0.0);\r\n        this.curr = new Coord2D (0.0, 0.0);\r\n        this.diff = new Coord2D (0.0, 0.0);\r\n        this.buttons = [];\r\n    }\r\n\r\n    Down (canvas, ev)\r\n    {\r\n        this.buttons.push (ev.which);\r\n        this.curr = this.GetPositionFromEvent (canvas, ev);\r\n        this.prev = this.curr.Clone ();\r\n    }\r\n\r\n    Move (canvas, ev)\r\n    {\r\n        this.curr = this.GetPositionFromEvent (canvas, ev);\r\n\t\tthis.diff = SubCoord2D (this.curr, this.prev);\r\n\t\tthis.prev = this.curr.Clone ();\r\n\t}\r\n\r\n\tUp (canvas, ev)\r\n\t{\r\n\t\tlet buttonIndex = this.buttons.indexOf (ev.which);\r\n\t\tif (buttonIndex !== -1) {\r\n\t\t\tthis.buttons.splice (buttonIndex, 1);\r\n\t\t}\r\n\t\tthis.curr = this.GetPositionFromEvent (canvas, ev);\r\n\t}\r\n\r\n\tLeave (canvas, ev)\r\n\t{\r\n\t\tthis.buttons = [];\r\n\t\tthis.curr = this.GetPositionFromEvent (canvas, ev);\r\n\t}\r\n\r\n\tIsButtonDown ()\r\n\t{\r\n\t\treturn this.buttons.length > 0;\r\n\t}\r\n\r\n\tGetButton ()\r\n\t{\r\n\t\tlet length = this.buttons.length;\r\n\t\tif (length === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.buttons[length - 1];\r\n\t}\r\n\r\n\tGetPosition ()\r\n\t{\r\n\t\treturn this.curr;\r\n\t}\r\n\r\n\tGetMoveDiff ()\r\n\t{\r\n\t\treturn this.diff;\r\n\t}\r\n\r\n\tGetPositionFromEvent (canvas, ev)\r\n\t{\r\n\t\treturn GetDomElementClientCoordinates (canvas, ev.clientX, ev.clientY);\r\n\t}\r\n}\r\n\r\nexport class TouchInteraction\r\n{\r\n\tconstructor ()\r\n\t{\r\n\t\tthis.prevPos = new Coord2D (0.0, 0.0);\r\n\t\tthis.currPos = new Coord2D (0.0, 0.0);\r\n\t\tthis.diffPos = new Coord2D (0.0, 0.0);\r\n\t\tthis.prevDist = 0.0;\r\n\t\tthis.currDist = 0.0;\r\n\t\tthis.diffDist = 0.0;\r\n\t\tthis.fingers = 0;\r\n\t}\r\n\r\n\tStart (canvas, ev)\r\n\t{\r\n\t\tif (ev.touches.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.fingers = ev.touches.length;\r\n\r\n\t\tthis.currPos = this.GetPositionFromEvent (canvas, ev);\r\n\t\tthis.prevPos = this.currPos.Clone ();\r\n\r\n\t\tthis.currDist = this.GetTouchDistanceFromEvent (canvas, ev);\r\n\t\tthis.prevDist = this.currDist;\r\n\t}\r\n\r\n\tMove (canvas, ev)\r\n\t{\r\n\t\tif (ev.touches.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.currPos = this.GetPositionFromEvent (canvas, ev);\r\n\t\tthis.diffPos = SubCoord2D (this.currPos, this.prevPos);\r\n\t\tthis.prevPos = this.currPos.Clone ();\r\n\r\n\t\tthis.currDist = this.GetTouchDistanceFromEvent (canvas, ev);\r\n\t\tthis.diffDist = this.currDist - this.prevDist;\r\n\t\tthis.prevDist = this.currDist;\r\n\t}\r\n\r\n\tEnd (canvas, ev)\r\n\t{\r\n\t\tif (ev.touches.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.fingers = 0;\r\n\t\tthis.currPos = this.GetPositionFromEvent (canvas, ev);\r\n\t\tthis.currDist = this.GetTouchDistanceFromEvent (canvas, ev);\r\n\t}\r\n\r\n\tIsFingerDown ()\r\n\t{\r\n\t\treturn this.fingers !== 0;\r\n\t}\r\n\r\n\tGetFingerCount ()\r\n\t{\r\n\t\treturn this.fingers;\r\n\t}\r\n\r\n\tGetPosition ()\r\n\t{\r\n\t\treturn this.currPos;\r\n\t}\r\n\r\n\tGetMoveDiff ()\r\n\t{\r\n\t\treturn this.diffPos;\r\n\t}\r\n\r\n\tGetDistanceDiff ()\r\n\t{\r\n\t\treturn this.diffDist;\r\n\t}\r\n\r\n\tGetPositionFromEvent (canvas, ev)\r\n\t{\r\n\t\tlet coord = null;\r\n\t\tif (ev.touches.length !== 0) {\r\n\t\t\tlet touchEv = ev.touches[0];\r\n\t\t\tcoord = GetDomElementClientCoordinates (canvas, touchEv.pageX, touchEv.pageY);\r\n\t\t}\r\n\t\treturn coord;\r\n\t}\r\n\r\n\tGetTouchDistanceFromEvent (canvas, ev)\r\n\t{\r\n\t\tif (ev.touches.length !== 2) {\r\n\t\t\treturn 0.0;\r\n\t\t}\r\n\t\tlet touchEv1 = ev.touches[0];\r\n\t\tlet touchEv2 = ev.touches[1];\r\n\t\tlet distance = CoordDistance2D (\r\n\t\t\tGetDomElementClientCoordinates (canvas, touchEv1.pageX, touchEv1.pageY),\r\n\t\t\tGetDomElementClientCoordinates (canvas, touchEv2.pageX, touchEv2.pageY)\r\n\t\t);\r\n\t\treturn distance;\r\n\t}\r\n}\r\n\r\nexport class ClickDetector\r\n{\r\n\tconstructor ()\r\n\t{\r\n\t\tthis.isClick = false;\r\n\t\tthis.startPosition = null;\r\n\t}\r\n\r\n\tStart (startPosition)\r\n\t{\r\n\t\tthis.isClick = true;\r\n\t\tthis.startPosition = startPosition;\r\n\t}\r\n\r\n\tMove (currentPosition)\r\n\t{\r\n\t\tif (!this.isClick) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.startPosition !== null) {\r\n\t\t\tconst maxClickDistance = 3.0;\r\n\t\t\tconst currentDistance = CoordDistance2D (this.startPosition, currentPosition);\r\n\t\t\tif (currentDistance > maxClickDistance) {\r\n\t\t\t\tthis.Cancel ();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.Cancel ();\r\n\t\t}\r\n\t}\r\n\r\n\tEnd ()\r\n\t{\r\n\t\tthis.startPosition = null;\r\n\t}\r\n\r\n\tCancel ()\r\n\t{\r\n\t\tthis.isClick = false;\r\n\t\tthis.startPosition = null;\r\n\t}\r\n\r\n\tIsClick ()\r\n\t{\r\n\t\treturn this.isClick;\r\n\t}\r\n}\r\n\r\nexport const NavigationType =\r\n{\r\n\tNone : 0,\r\n\tOrbit : 1,\r\n\tPan : 2,\r\n\tZoom : 3\r\n};\r\n\r\nexport class Navigation\r\n{\r\n\tconstructor (canvas, camera, callbacks)\r\n\t{\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.camera = camera;\r\n\t\tthis.callbacks = callbacks;\r\n\t\tthis.fixUpVector = true;\r\n\r\n\t\tthis.mouse = new MouseInteraction ();\r\n\t\tthis.touch = new TouchInteraction ();\r\n\t\tthis.clickDetector = new ClickDetector ();\r\n\r\n\t\tthis.onMouseClick = null;\r\n\t\tthis.onMouseMove = null;\r\n\t\tthis.onContext = null;\r\n\r\n\t\tif (this.canvas.addEventListener) {\r\n\t\t\tthis.canvas.addEventListener ('mousedown', this.OnMouseDown.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('wheel', this.OnMouseWheel.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('touchstart', this.OnTouchStart.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('touchmove', this.OnTouchMove.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('touchcancel', this.OnTouchEnd.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('touchend', this.OnTouchEnd.bind (this));\r\n\t\t\tthis.canvas.addEventListener ('contextmenu', this.OnContextMenu.bind (this));\r\n\t\t}\r\n\t\tif (document.addEventListener) {\r\n\t\t\tdocument.addEventListener ('mousemove', this.OnMouseMove.bind (this));\r\n\t\t\tdocument.addEventListener ('mouseup', this.OnMouseUp.bind (this));\r\n\t\t\tdocument.addEventListener ('mouseleave', this.OnMouseLeave.bind (this));\r\n\t\t}\r\n\t}\r\n\r\n\tSetMouseClickHandler (onMouseClick)\r\n\t{\r\n\t\tthis.onMouseClick = onMouseClick;\r\n\t}\r\n\r\n\tSetMouseMoveHandler (onMouseMove)\r\n\t{\r\n\t\tthis.onMouseMove = onMouseMove;\r\n\t}\r\n\r\n\tSetContextMenuHandler (onContext)\r\n\t{\r\n\t\tthis.onContext = onContext;\r\n\t}\r\n\r\n\tIsFixUpVector ()\r\n\t{\r\n\t\treturn this.fixUpVector;\r\n\t}\r\n\r\n\tSetFixUpVector (fixUpVector)\r\n\t{\r\n\t\tthis.fixUpVector = fixUpVector;\r\n\t}\r\n\r\n\tGetCamera ()\r\n\t{\r\n\t\treturn this.camera;\r\n\t}\r\n\r\n\tSetCamera (camera)\r\n\t{\r\n\t\tthis.camera = camera;\r\n\t}\r\n\r\n\tMoveCamera (newCamera, stepCount)\r\n\t{\r\n\t\tfunction Step (obj, steps, count, index)\r\n\t\t{\r\n\t\t\tobj.camera.eye = steps.eye[index];\r\n\t\t\tobj.camera.center = steps.center[index];\r\n\t\t\tobj.camera.up = steps.up[index];\r\n\t\t\tobj.Update ();\r\n\r\n\t\t\tif (index < count - 1) {\r\n\t\t\t\trequestAnimationFrame (() => {\r\n\t\t\t\t\tStep (obj, steps, count, index + 1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newCamera === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (stepCount === 0 || CameraIsEqual3D (this.camera, newCamera)) {\r\n\t\t\tthis.camera = newCamera;\r\n\t\t} else {\r\n\t\t\tlet tweenFunc = ParabolicTweenFunction;\r\n\t\t\tlet steps = {\r\n\t\t\t\teye : TweenCoord3D (this.camera.eye, newCamera.eye, stepCount, tweenFunc),\r\n\t\t\t\tcenter : TweenCoord3D (this.camera.center, newCamera.center, stepCount, tweenFunc),\r\n\t\t\t\tup : TweenCoord3D (this.camera.up, newCamera.up, stepCount, tweenFunc)\r\n\t\t\t};\r\n\t\t\trequestAnimationFrame (() => {\r\n\t\t\t\tStep (this, steps, stepCount, 0);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.Update ();\r\n\t}\r\n\r\n\tGetFitToSphereCamera (center, radius)\r\n\t{\r\n\t\tif (IsZero (radius)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet fitCamera = this.camera.Clone ();\r\n\r\n\t\tlet offsetToOrigo = SubCoord3D (fitCamera.center, center);\r\n\t\tfitCamera.eye = SubCoord3D (fitCamera.eye, offsetToOrigo);\r\n\t\tfitCamera.center = center.Clone ();\r\n\r\n\t\tlet centerEyeDirection = SubCoord3D (fitCamera.eye, fitCamera.center).Normalize ();\r\n\t\tlet fieldOfView = this.camera.fov / 2.0;\r\n\t\tif (this.canvas.width < this.canvas.height) {\r\n\t\t\tfieldOfView = fieldOfView * this.canvas.width / this.canvas.height;\r\n\t\t}\r\n\t\tlet distance = radius / Math.sin (fieldOfView * DegRad);\r\n\r\n\t\tfitCamera.eye = fitCamera.center.Clone ().Offset (centerEyeDirection, distance);\r\n\r\n\t\treturn fitCamera;\r\n\t}\r\n\r\n\tOnMouseDown (ev)\r\n\t{\r\n\t\tev.preventDefault ();\r\n\r\n\t\tthis.mouse.Down (this.canvas, ev);\r\n\t\tthis.clickDetector.Start (this.mouse.GetPosition ());\r\n\t}\r\n\r\n\tOnMouseMove (ev)\r\n\t{\r\n\t\tthis.mouse.Move (this.canvas, ev);\r\n\t\tthis.clickDetector.Move (this.mouse.GetPosition ());\r\n\t\tif (this.onMouseMove) {\r\n\t\t\tlet mouseCoords = GetDomElementClientCoordinates (this.canvas, ev.clientX, ev.clientY);\r\n\t\t\tthis.onMouseMove (mouseCoords);\r\n\t\t}\r\n\r\n\t\tif (!this.mouse.IsButtonDown ()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet moveDiff = this.mouse.GetMoveDiff ();\r\n\t\tlet mouseButton = this.mouse.GetButton ();\r\n\r\n\t\tlet navigationType = NavigationType.None;\r\n\t\tif (mouseButton === 1) {\r\n\t\t\tif (ev.ctrlKey) {\r\n\t\t\t\tnavigationType = NavigationType.Zoom;\r\n\t\t\t} else if (ev.shiftKey) {\r\n\t\t\t\tnavigationType = NavigationType.Pan;\r\n\t\t\t} else {\r\n\t\t\t\tnavigationType = NavigationType.Orbit;\r\n\t\t\t}\r\n\t\t} else if (mouseButton === 2 || mouseButton === 3) {\r\n\t\t\tnavigationType = NavigationType.Pan;\r\n\t\t}\r\n\r\n\t\tif (navigationType === NavigationType.Orbit) {\r\n\t\t\tlet orbitRatio = 0.5;\r\n\t\t\tthis.Orbit (moveDiff.x * orbitRatio, moveDiff.y * orbitRatio);\r\n\t\t} else if (navigationType === NavigationType.Pan) {\r\n\t\t\tlet eyeCenterDistance = CoordDistance3D (this.camera.eye, this.camera.center);\r\n\t\t\tlet panRatio = 0.001 * eyeCenterDistance;\r\n\t\t\tthis.Pan (moveDiff.x * panRatio, moveDiff.y * panRatio);\r\n\t\t} else if (navigationType === NavigationType.Zoom) {\r\n\t\t\tlet zoomRatio = 0.005;\r\n\t\t\tthis.Zoom (-moveDiff.y * zoomRatio);\r\n\t\t}\r\n\r\n\t\tthis.Update ();\r\n\t}\r\n\r\n\tOnMouseUp (ev)\r\n\t{\r\n\t\tthis.mouse.Up (this.canvas, ev);\r\n\t\tthis.clickDetector.End ();\r\n\r\n\t\tif (this.clickDetector.IsClick ()) {\r\n\t\t\tlet mouseCoords = this.mouse.GetPosition ();\r\n\t\t\tthis.Click (ev.which, mouseCoords);\r\n\t\t}\r\n\t}\r\n\r\n\tOnMouseLeave (ev)\r\n\t{\r\n\t\tthis.mouse.Leave (this.canvas, ev);\r\n\t\tthis.clickDetector.Cancel ();\r\n\t}\r\n\r\n\tOnTouchStart (ev)\r\n\t{\r\n\t\tev.preventDefault ();\r\n\r\n\t\tthis.touch.Start (this.canvas, ev);\r\n\t\tthis.clickDetector.Start (this.touch.GetPosition ());\r\n\t}\r\n\r\n\tOnTouchMove (ev)\r\n\t{\r\n\t\tev.preventDefault ();\r\n\r\n\t\tthis.touch.Move (this.canvas, ev);\r\n\t\tthis.clickDetector.Move (this.touch.GetPosition ());\r\n\t\tif (!this.touch.IsFingerDown ()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet moveDiff = this.touch.GetMoveDiff ();\r\n\t\tlet distanceDiff = this.touch.GetDistanceDiff ();\r\n\t\tlet fingerCount = this.touch.GetFingerCount ();\r\n\r\n\t\tlet navigationType = NavigationType.None;\r\n\t\tif (fingerCount === 1) {\r\n\t\t\tnavigationType = NavigationType.Orbit;\r\n\t\t} else if (fingerCount === 2) {\r\n\t\t\tnavigationType = NavigationType.Pan;\r\n\t\t}\r\n\r\n\t\tif (navigationType === NavigationType.Orbit) {\r\n\t\t\tlet orbitRatio = 0.5;\r\n\t\t\tthis.Orbit (moveDiff.x * orbitRatio, moveDiff.y * orbitRatio);\r\n\t\t} else if (navigationType === NavigationType.Pan) {\r\n\t\t\tlet zoomRatio = 0.005;\r\n\t\t\tthis.Zoom (distanceDiff * zoomRatio);\r\n\t\t\tlet panRatio = 0.001 * CoordDistance3D (this.camera.eye, this.camera.center);\r\n\t\t\tthis.Pan (moveDiff.x * panRatio, moveDiff.y * panRatio);\r\n\t\t}\r\n\r\n\t\tthis.Update ();\r\n\t}\r\n\r\n\tOnTouchEnd (ev)\r\n\t{\r\n\t\tev.preventDefault ();\r\n\r\n\t\tthis.touch.End (this.canvas, ev);\r\n\t\tthis.clickDetector.End ();\r\n\r\n\t\tif (this.clickDetector.IsClick ()) {\r\n\t\t\tlet touchCoords = this.touch.GetPosition ();\r\n\t\t\tif (this.touch.GetFingerCount () === 1) {\r\n\t\t\t\tthis.Click (1, touchCoords);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tOnMouseWheel (ev)\r\n\t{\r\n\t\tlet params = ev || window.event;\r\n\t\tparams.preventDefault ();\r\n\r\n\t\tlet delta = -params.deltaY / 40;\r\n\t\tlet ratio = 0.1;\r\n\t\tif (delta < 0) {\r\n\t\t\tratio = ratio * -1.0;\r\n\t\t}\r\n\r\n\t\tthis.Zoom (ratio);\r\n\t\tthis.Update ();\r\n\t}\r\n\r\n\tOnContextMenu (ev)\r\n\t{\r\n\t\tev.preventDefault ();\r\n\r\n\t\tif (this.clickDetector.IsClick ()) {\r\n\t\t\tthis.Context (ev.clientX, ev.clientY);\r\n\t\t\tthis.clickDetector.Cancel ();\r\n\t\t}\r\n\t}\r\n\r\n\tOrbit (angleX, angleY)\r\n\t{\r\n\t\tlet radAngleX = angleX * DegRad;\r\n\t\tlet radAngleY = angleY * DegRad;\r\n\r\n\t\tlet viewDirection = SubCoord3D (this.camera.center, this.camera.eye).Normalize ();\r\n\t\tlet horizontalDirection = CrossVector3D (viewDirection, this.camera.up).Normalize ();\r\n\r\n\t\tif (this.fixUpVector) {\r\n\t\t\tlet originalAngle = VectorAngle3D (viewDirection, this.camera.up);\r\n\t\t\tlet newAngle = originalAngle + radAngleY;\r\n\t\t\tif (IsGreater (newAngle, 0.0) && IsLower (newAngle, Math.PI)) {\r\n\t\t\t\tthis.camera.eye.Rotate (horizontalDirection, -radAngleY, this.camera.center);\r\n\t\t\t}\r\n\t\t\tthis.camera.eye.Rotate (this.camera.up, -radAngleX, this.camera.center);\r\n\t\t} else {\r\n\t\t\tlet verticalDirection = CrossVector3D (horizontalDirection, viewDirection).Normalize ();\r\n\t\t\tthis.camera.eye.Rotate (horizontalDirection, -radAngleY, this.camera.center);\r\n\t\t\tthis.camera.eye.Rotate (verticalDirection, -radAngleX, this.camera.center);\r\n\t\t\tthis.camera.up = verticalDirection;\r\n\t\t}\r\n\t}\r\n\r\n\tPan (moveX, moveY)\r\n\t{\r\n\t\tlet viewDirection = SubCoord3D (this.camera.center, this.camera.eye).Normalize ();\r\n\t\tlet horizontalDirection = CrossVector3D (viewDirection, this.camera.up).Normalize ();\r\n\t\tlet verticalDirection = CrossVector3D (horizontalDirection, viewDirection).Normalize ();\r\n\r\n\t\tthis.camera.eye.Offset (horizontalDirection, -moveX);\r\n\t\tthis.camera.center.Offset (horizontalDirection, -moveX);\r\n\r\n\t\tthis.camera.eye.Offset (verticalDirection, moveY);\r\n\t\tthis.camera.center.Offset (verticalDirection, moveY);\r\n\t}\r\n\r\n\tZoom (ratio)\r\n\t{\r\n\t\tlet direction = SubCoord3D (this.camera.center, this.camera.eye);\r\n\t\tlet distance = direction.Length ();\r\n\t\tlet move = distance * ratio;\r\n\t\tthis.camera.eye.Offset (direction, move);\r\n\t}\r\n\r\n\tUpdate ()\r\n\t{\r\n\t\tthis.callbacks.onUpdate ();\r\n\t}\r\n\r\n\tClick (button, mouseCoords)\r\n\t{\r\n\t\tif (this.onMouseClick) {\r\n\t\t\tthis.onMouseClick (button, mouseCoords);\r\n\t\t}\r\n\t}\r\n\r\n\tContext (clientX, clientY)\r\n\t{\r\n\t\tif (this.onContext) {\r\n\t\t\tlet globalCoords = {\r\n\t\t\t\tx : clientX,\r\n\t\t\t\ty : clientY\r\n\t\t\t};\r\n\t\t\tlet localCoords = GetDomElementClientCoordinates (this.canvas, clientX, clientY);\r\n\t\t\tthis.onContext (globalCoords, localCoords);\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}