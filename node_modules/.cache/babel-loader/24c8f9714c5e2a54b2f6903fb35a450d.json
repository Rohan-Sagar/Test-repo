{"ast":null,"code":"import { Direction } from '../geometry/geometry.js';\nimport { GetExternalLibPath } from '../io/externallibs.js';\nimport { Node } from '../model/node.js';\nimport { RGBColorFromFloatComponents } from '../model/color.js';\nimport { ConvertThreeGeometryToMesh } from '../threejs/threeutils.js';\nimport { ImporterBase } from './importerbase.js';\nimport { ColorToMaterialConverter } from './importerutils.js';\nexport class ImporterOcct extends ImporterBase {\n  constructor() {\n    super();\n    this.worker = null;\n  }\n\n  CanImportExtension(extension) {\n    return extension === 'stp' || extension === 'step' || extension === 'igs' || extension === 'iges';\n  }\n\n  GetUpDirection() {\n    return Direction.Y;\n  }\n\n  ClearContent() {}\n\n  ResetContent() {}\n\n  ImportContent(fileContent, onFinish) {\n    if (this.worker === null) {\n      let workerPath = GetExternalLibPath('loaders/occt-import-js-worker.js');\n      this.worker = new Worker(workerPath);\n    }\n\n    let onModelConverted = ev => {\n      this.ImportResultJson(ev.data, onFinish);\n      this.worker.removeEventListener('message', onModelConverted);\n    };\n\n    this.worker.addEventListener('message', onModelConverted);\n    this.worker.addEventListener('error', ev => {\n      this.worker = null;\n      this.SetError('Failed to load occt-import-js.');\n      onFinish();\n    });\n    let format = null;\n\n    if (this.extension === 'stp' || this.extension === 'step') {\n      format = 'step';\n    } else if (this.extension === 'igs' || this.extension === 'iges') {\n      format = 'iges';\n    } else {\n      onFinish();\n      return;\n    }\n\n    let fileBuffer = new Uint8Array(fileContent);\n    this.worker.postMessage({\n      format: format,\n      buffer: fileBuffer\n    });\n  }\n\n  ImportResultJson(stepContent, onFinish) {\n    if (!stepContent.success) {\n      return;\n    }\n\n    let colorToMaterial = new ColorToMaterialConverter(this.model);\n    let rootNode = this.model.GetRootNode();\n    this.ImportNode(stepContent, stepContent.root, rootNode, colorToMaterial);\n    onFinish();\n  }\n\n  ImportNode(stepContent, occtNode, parentNode, colorToMaterial) {\n    for (let nodeMeshIndex of occtNode.meshes) {\n      let occtMesh = stepContent.meshes[nodeMeshIndex];\n      let mesh = this.ImportMesh(occtMesh, colorToMaterial);\n      let meshIndex = this.model.AddMesh(mesh);\n      parentNode.AddMeshIndex(meshIndex);\n    }\n\n    for (let childOcctNode of occtNode.children) {\n      let childNode = new Node();\n      childNode.SetName(childOcctNode.name);\n      parentNode.AddChildNode(childNode);\n      this.ImportNode(stepContent, childOcctNode, childNode, colorToMaterial);\n    }\n  }\n\n  ImportMesh(occtMesh, colorToMaterial) {\n    let materialIndex = null;\n\n    if (occtMesh.color) {\n      let color = RGBColorFromFloatComponents(occtMesh.color[0], occtMesh.color[1], occtMesh.color[2]);\n      materialIndex = colorToMaterial.GetMaterialIndex(color.r, color.g, color.b, null);\n    }\n\n    let mesh = ConvertThreeGeometryToMesh(occtMesh, materialIndex);\n\n    if (occtMesh.name) {\n      mesh.SetName(occtMesh.name);\n    }\n\n    if (occtMesh.face_colors) {\n      for (let faceColorGroup of occtMesh.face_colors) {\n        let faceColor = RGBColorFromFloatComponents(faceColorGroup.color[0], faceColorGroup.color[1], faceColorGroup.color[2]);\n        let faceMaterialIndex = colorToMaterial.GetMaterialIndex(faceColor.r, faceColor.g, faceColor.b, null);\n\n        for (let i = faceColorGroup.first; i <= faceColorGroup.last; i++) {\n          let triangle = mesh.GetTriangle(i);\n          triangle.SetMaterial(faceMaterialIndex);\n        }\n      }\n    }\n\n    return mesh;\n  }\n\n}","map":{"version":3,"names":["Direction","GetExternalLibPath","Node","RGBColorFromFloatComponents","ConvertThreeGeometryToMesh","ImporterBase","ColorToMaterialConverter","ImporterOcct","constructor","worker","CanImportExtension","extension","GetUpDirection","Y","ClearContent","ResetContent","ImportContent","fileContent","onFinish","workerPath","Worker","onModelConverted","ev","ImportResultJson","data","removeEventListener","addEventListener","SetError","format","fileBuffer","Uint8Array","postMessage","buffer","stepContent","success","colorToMaterial","model","rootNode","GetRootNode","ImportNode","root","occtNode","parentNode","nodeMeshIndex","meshes","occtMesh","mesh","ImportMesh","meshIndex","AddMesh","AddMeshIndex","childOcctNode","children","childNode","SetName","name","AddChildNode","materialIndex","color","GetMaterialIndex","r","g","b","face_colors","faceColorGroup","faceColor","faceMaterialIndex","i","first","last","triangle","GetTriangle","SetMaterial"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/import/importerocct.js"],"sourcesContent":["import { Direction } from '../geometry/geometry.js';\r\nimport { GetExternalLibPath } from '../io/externallibs.js';\r\nimport { Node } from '../model/node.js';\r\nimport { RGBColorFromFloatComponents } from '../model/color.js';\r\nimport { ConvertThreeGeometryToMesh } from '../threejs/threeutils.js';\r\nimport { ImporterBase } from './importerbase.js';\r\nimport { ColorToMaterialConverter } from './importerutils.js';\r\n\r\nexport class ImporterOcct extends ImporterBase\r\n{\r\n    constructor ()\r\n    {\r\n        super ();\r\n\t\tthis.worker = null;\r\n    }\r\n\r\n    CanImportExtension (extension)\r\n    {\r\n        return extension === 'stp' || extension === 'step' || extension === 'igs' || extension === 'iges';\r\n    }\r\n\r\n    GetUpDirection ()\r\n    {\r\n        return Direction.Y;\r\n    }\r\n\r\n\tClearContent ()\r\n\t{\r\n\r\n\t}\r\n\r\n    ResetContent ()\r\n    {\r\n\r\n    }\r\n\r\n    ImportContent (fileContent, onFinish)\r\n    {\r\n        if (this.worker === null) {\r\n            let workerPath = GetExternalLibPath ('loaders/occt-import-js-worker.js');\r\n            this.worker = new Worker (workerPath);\r\n        }\r\n\r\n        let onModelConverted = (ev) => {\r\n            this.ImportResultJson (ev.data, onFinish);\r\n            this.worker.removeEventListener ('message', onModelConverted);\r\n        };\r\n\r\n        this.worker.addEventListener ('message', onModelConverted);\r\n        this.worker.addEventListener ('error', (ev) => {\r\n            this.worker = null;\r\n            this.SetError ('Failed to load occt-import-js.');\r\n            onFinish ();\r\n        });\r\n\r\n        let format = null;\r\n        if (this.extension === 'stp' || this.extension === 'step') {\r\n            format = 'step';\r\n        } else if (this.extension === 'igs' || this.extension === 'iges') {\r\n            format = 'iges';\r\n        } else {\r\n            onFinish ();\r\n            return;\r\n        }\r\n\r\n        let fileBuffer = new Uint8Array (fileContent);\r\n        this.worker.postMessage ({\r\n            format : format,\r\n            buffer : fileBuffer\r\n        });\r\n    }\r\n\r\n\tImportResultJson (stepContent, onFinish)\r\n\t{\r\n        if (!stepContent.success) {\r\n            return;\r\n        }\r\n        let colorToMaterial = new ColorToMaterialConverter (this.model);\r\n        let rootNode = this.model.GetRootNode ();\r\n        this.ImportNode (stepContent, stepContent.root, rootNode, colorToMaterial);\r\n        onFinish ();\r\n\t}\r\n\r\n    ImportNode (stepContent, occtNode, parentNode, colorToMaterial)\r\n    {\r\n        for (let nodeMeshIndex of occtNode.meshes) {\r\n            let occtMesh = stepContent.meshes[nodeMeshIndex];\r\n            let mesh = this.ImportMesh (occtMesh, colorToMaterial);\r\n            let meshIndex = this.model.AddMesh (mesh);\r\n            parentNode.AddMeshIndex (meshIndex);\r\n        }\r\n        for (let childOcctNode of occtNode.children) {\r\n            let childNode = new Node ();\r\n            childNode.SetName (childOcctNode.name);\r\n            parentNode.AddChildNode (childNode);\r\n            this.ImportNode (stepContent, childOcctNode, childNode, colorToMaterial);\r\n        }\r\n    }\r\n\r\n    ImportMesh (occtMesh, colorToMaterial)\r\n    {\r\n        let materialIndex = null;\r\n        if (occtMesh.color) {\r\n            let color = RGBColorFromFloatComponents (occtMesh.color[0], occtMesh.color[1], occtMesh.color[2]);\r\n            materialIndex = colorToMaterial.GetMaterialIndex (color.r, color.g, color.b, null);\r\n        }\r\n        let mesh = ConvertThreeGeometryToMesh (occtMesh, materialIndex);\r\n        if (occtMesh.name) {\r\n            mesh.SetName (occtMesh.name);\r\n        }\r\n        if (occtMesh.face_colors) {\r\n            for (let faceColorGroup of occtMesh.face_colors) {\r\n                let faceColor = RGBColorFromFloatComponents (faceColorGroup.color[0], faceColorGroup.color[1], faceColorGroup.color[2]);\r\n                let faceMaterialIndex = colorToMaterial.GetMaterialIndex (faceColor.r, faceColor.g, faceColor.b, null);\r\n                for (let i = faceColorGroup.first; i <= faceColorGroup.last; i++) {\r\n                    let triangle = mesh.GetTriangle (i);\r\n                    triangle.SetMaterial (faceMaterialIndex);\r\n                }\r\n            }\r\n        }\r\n        return mesh;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}