{"ast":null,"code":"export function ArrayBufferToUtf8String(buffer) {\n  let decoder = new TextDecoder('utf-8');\n  return decoder.decode(buffer);\n}\nexport function ArrayBufferToAsciiString(buffer) {\n  let text = '';\n  let bufferView = new Uint8Array(buffer);\n\n  for (let i = 0; i < bufferView.byteLength; i++) {\n    text += String.fromCharCode(bufferView[i]);\n  }\n\n  return text;\n}\nexport function AsciiStringToArrayBuffer(str) {\n  let buffer = new ArrayBuffer(str.length);\n  let bufferView = new Uint8Array(buffer);\n\n  for (let i = 0; i < str.length; i++) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n}\nexport function Utf8StringToArrayBuffer(str) {\n  let encoder = new TextEncoder();\n  let uint8Array = encoder.encode(str);\n  return uint8Array.buffer;\n}\nexport function Base64DataURIToArrayBuffer(uri) {\n  let dataPrefix = 'data:';\n\n  if (!uri.startsWith(dataPrefix)) {\n    return null;\n  }\n\n  let mimeSeparator = uri.indexOf(';');\n\n  if (mimeSeparator === -1) {\n    return null;\n  }\n\n  let bufferSeparator = uri.indexOf(',');\n\n  if (bufferSeparator === -1) {\n    return null;\n  }\n\n  let mimeType = uri.substring(dataPrefix.length, dataPrefix.length + mimeSeparator - 5);\n  let base64String = atob(uri.substring(bufferSeparator + 1));\n  let buffer = new ArrayBuffer(base64String.length);\n  let bufferView = new Uint8Array(buffer);\n\n  for (let i = 0; i < base64String.length; i++) {\n    bufferView[i] = base64String.charCodeAt(i);\n  }\n\n  return {\n    mimeType: mimeType,\n    buffer: buffer\n  };\n}\nexport function GetFileExtensionFromMimeType(mimeType) {\n  if (mimeType === undefined || mimeType === null) {\n    return '';\n  }\n\n  let mimeParts = mimeType.split('/');\n\n  if (mimeParts.length === 0) {\n    return '';\n  }\n\n  return mimeParts[mimeParts.length - 1];\n}\nexport function CreateObjectUrl(content) {\n  let blob = new Blob([content]);\n  let url = URL.createObjectURL(blob);\n  return url;\n}\nexport function CreateObjectUrlWithMimeType(content, mimeType) {\n  let blob = new Blob([content], {\n    type: mimeType\n  });\n  let url = URL.createObjectURL(blob);\n  return url;\n}\nexport function RevokeObjectUrl(url) {\n  URL.revokeObjectURL(url);\n}","map":{"version":3,"names":["ArrayBufferToUtf8String","buffer","decoder","TextDecoder","decode","ArrayBufferToAsciiString","text","bufferView","Uint8Array","i","byteLength","String","fromCharCode","AsciiStringToArrayBuffer","str","ArrayBuffer","length","charCodeAt","Utf8StringToArrayBuffer","encoder","TextEncoder","uint8Array","encode","Base64DataURIToArrayBuffer","uri","dataPrefix","startsWith","mimeSeparator","indexOf","bufferSeparator","mimeType","substring","base64String","atob","GetFileExtensionFromMimeType","undefined","mimeParts","split","CreateObjectUrl","content","blob","Blob","url","URL","createObjectURL","CreateObjectUrlWithMimeType","type","RevokeObjectUrl","revokeObjectURL"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/io/bufferutils.js"],"sourcesContent":["export function ArrayBufferToUtf8String (buffer)\r\n{\r\n\tlet decoder = new TextDecoder ('utf-8');\r\n\treturn decoder.decode (buffer);\r\n}\r\n\r\nexport function ArrayBufferToAsciiString (buffer)\r\n{\r\n\tlet text = '';\r\n\tlet bufferView = new Uint8Array (buffer);\r\n\tfor (let i = 0; i < bufferView.byteLength; i++) {\r\n\t\ttext += String.fromCharCode (bufferView[i]);\r\n\t}\r\n\treturn text;\r\n}\r\n\r\nexport function AsciiStringToArrayBuffer (str)\r\n{\r\n\tlet buffer = new ArrayBuffer (str.length);\r\n\tlet bufferView = new Uint8Array (buffer);\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tbufferView[i] = str.charCodeAt (i);\r\n\t}\r\n\treturn buffer;\r\n}\r\n\r\nexport function Utf8StringToArrayBuffer (str)\r\n{\r\n\tlet encoder = new TextEncoder ();\r\n\tlet uint8Array = encoder.encode (str);\r\n\treturn uint8Array.buffer;\r\n}\r\n\r\nexport function Base64DataURIToArrayBuffer (uri)\r\n{\r\n\tlet dataPrefix = 'data:';\r\n\tif (!uri.startsWith (dataPrefix)) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet mimeSeparator = uri.indexOf (';');\r\n\tif (mimeSeparator === -1) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet bufferSeparator = uri.indexOf (',');\r\n\tif (bufferSeparator === -1) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet mimeType = uri.substring (dataPrefix.length, dataPrefix.length + mimeSeparator - 5);\r\n\tlet base64String = atob (uri.substring (bufferSeparator + 1));\r\n\tlet buffer = new ArrayBuffer (base64String.length);\r\n\tlet bufferView = new Uint8Array (buffer);\r\n\tfor (let i = 0; i < base64String.length; i++) {\r\n\t\tbufferView[i] = base64String.charCodeAt (i);\r\n\t}\r\n\r\n\treturn {\r\n\t\tmimeType : mimeType,\r\n\t\tbuffer : buffer\r\n\t};\r\n}\r\n\r\nexport function GetFileExtensionFromMimeType (mimeType)\r\n{\r\n\tif (mimeType === undefined || mimeType === null) {\r\n\t\treturn '';\r\n\t}\r\n\tlet mimeParts = mimeType.split ('/');\r\n\tif (mimeParts.length === 0) {\r\n\t\treturn '';\r\n\t}\r\n\treturn mimeParts[mimeParts.length - 1];\r\n}\r\n\r\nexport function CreateObjectUrl (content)\r\n{\r\n\tlet blob = new Blob ([content]);\r\n\tlet url = URL.createObjectURL (blob);\r\n\treturn url;\r\n}\r\n\r\nexport function CreateObjectUrlWithMimeType (content, mimeType)\r\n{\r\n\tlet blob = new Blob ([content], { type : mimeType });\r\n\tlet url = URL.createObjectURL (blob);\r\n\treturn url;\r\n}\r\n\r\nexport function RevokeObjectUrl (url)\r\n{\r\n\tURL.revokeObjectURL (url);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}