{"ast":null,"code":"import { EscapeHtmlChars } from '../core/core.js';\nimport { RGBColorToHexString } from './color.js';\nexport const PropertyType = {\n  Text: 1,\n  Integer: 2,\n  Number: 3,\n  Boolean: 4,\n  Percent: 5,\n  Color: 6\n};\nexport class Property {\n  constructor(type, name, value) {\n    this.type = type;\n    this.name = name;\n    this.value = value;\n  }\n\n  Clone() {\n    const clonable = this.type === PropertyType.Color;\n\n    if (clonable) {\n      return new Property(this.type, this.name, this.value.Clone());\n    } else {\n      return new Property(this.type, this.name, this.value);\n    }\n  }\n\n}\nexport class PropertyGroup {\n  constructor(name) {\n    this.name = name;\n    this.properties = [];\n  }\n\n  PropertyCount() {\n    return this.properties.length;\n  }\n\n  AddProperty(property) {\n    this.properties.push(property);\n  }\n\n  GetProperty(index) {\n    return this.properties[index];\n  }\n\n  Clone() {\n    let cloned = new PropertyGroup(this.name);\n\n    for (let property of this.properties) {\n      cloned.AddProperty(property.Clone());\n    }\n\n    return cloned;\n  }\n\n}\nexport function PropertyToString(property) {\n  if (property.type === PropertyType.Text) {\n    return EscapeHtmlChars(property.value);\n  } else if (property.type === PropertyType.Integer) {\n    return property.value.toLocaleString();\n  } else if (property.type === PropertyType.Number) {\n    return property.value.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  } else if (property.type === PropertyType.Boolean) {\n    return property.value ? 'True' : 'False';\n  } else if (property.type === PropertyType.Percent) {\n    return parseInt(property.value * 100, 10).toString() + '%';\n  } else if (property.type === PropertyType.Color) {\n    return '#' + RGBColorToHexString(property.value);\n  }\n\n  return null;\n}","map":{"version":3,"names":["EscapeHtmlChars","RGBColorToHexString","PropertyType","Text","Integer","Number","Boolean","Percent","Color","Property","constructor","type","name","value","Clone","clonable","PropertyGroup","properties","PropertyCount","length","AddProperty","property","push","GetProperty","index","cloned","PropertyToString","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","parseInt","toString"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/model/property.js"],"sourcesContent":["import { EscapeHtmlChars } from '../core/core.js';\r\nimport { RGBColorToHexString } from './color.js';\r\n\r\nexport const PropertyType =\r\n{\r\n    Text : 1,\r\n    Integer : 2,\r\n    Number : 3,\r\n    Boolean : 4,\r\n    Percent : 5,\r\n    Color : 6\r\n};\r\n\r\nexport class Property\r\n{\r\n    constructor (type, name, value)\r\n    {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    Clone ()\r\n    {\r\n        const clonable = (this.type === PropertyType.Color);\r\n        if (clonable) {\r\n            return new Property (this.type, this.name, this.value.Clone ());\r\n        } else {\r\n            return new Property (this.type, this.name, this.value);\r\n        }\r\n    }\r\n}\r\n\r\nexport class PropertyGroup\r\n{\r\n    constructor (name)\r\n    {\r\n        this.name = name;\r\n        this.properties = [];\r\n    }\r\n\r\n    PropertyCount ()\r\n    {\r\n        return this.properties.length;\r\n    }\r\n\r\n    AddProperty (property)\r\n    {\r\n        this.properties.push (property);\r\n    }\r\n\r\n    GetProperty (index)\r\n    {\r\n        return this.properties[index];\r\n    }\r\n\r\n    Clone ()\r\n    {\r\n        let cloned = new PropertyGroup (this.name);\r\n        for (let property of this.properties) {\r\n            cloned.AddProperty (property.Clone ());\r\n        }\r\n        return cloned;\r\n    }\r\n}\r\n\r\nexport function PropertyToString (property)\r\n{\r\n    if (property.type === PropertyType.Text) {\r\n        return EscapeHtmlChars (property.value);\r\n    } else if (property.type === PropertyType.Integer) {\r\n        return property.value.toLocaleString ();\r\n    } else if (property.type === PropertyType.Number) {\r\n        return property.value.toLocaleString (undefined, {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n    } else if (property.type === PropertyType.Boolean) {\r\n        return property.value ? 'True' : 'False';\r\n    } else if (property.type === PropertyType.Percent) {\r\n        return parseInt (property.value * 100, 10).toString () + '%';\r\n    } else if (property.type === PropertyType.Color) {\r\n        return '#' + RGBColorToHexString (property.value);\r\n    }\r\n    return null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}