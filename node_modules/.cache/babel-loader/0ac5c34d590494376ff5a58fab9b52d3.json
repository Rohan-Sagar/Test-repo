{"ast":null,"code":"import { IsLower } from '../geometry/geometry.js';\nimport { PhongMaterial } from '../model/material.js';\nimport { RGBColor, IntegerToHexString } from '../model/color.js';\nexport function NameFromLine(line, startIndex, commentChar) {\n  let name = line.substring(startIndex);\n  let commentStart = name.indexOf(commentChar);\n\n  if (commentStart !== -1) {\n    name = name.substring(0, commentStart);\n  }\n\n  return name.trim();\n}\nexport function ParametersFromLine(line, commentChar) {\n  if (commentChar !== null) {\n    let commentStart = line.indexOf(commentChar);\n\n    if (commentStart !== -1) {\n      line = line.substring(0, commentStart).trim();\n    }\n  }\n\n  return line.split(/\\s+/u);\n}\nexport function ReadLines(str, onLine) {\n  function LineFound(line, onLine) {\n    let trimmed = line.trim();\n\n    if (trimmed.length > 0) {\n      onLine(trimmed);\n    }\n  }\n\n  let cursor = 0;\n  let next = str.indexOf('\\n', cursor);\n\n  while (next !== -1) {\n    LineFound(str.substring(cursor, next), onLine);\n    cursor = next + 1;\n    next = str.indexOf('\\n', cursor);\n  }\n\n  LineFound(str.substring(cursor), onLine);\n}\nexport function IsPowerOfTwo(x) {\n  return (x & x - 1) === 0;\n}\nexport function NextPowerOfTwo(x) {\n  if (IsPowerOfTwo(x)) {\n    return x;\n  }\n\n  let npot = Math.pow(2, Math.ceil(Math.log(x) / Math.log(2)));\n  return parseInt(npot, 10);\n}\nexport function UpdateMaterialTransparency(material) {\n  material.transparent = false;\n\n  if (IsLower(material.opacity, 1.0)) {\n    material.transparent = true;\n  }\n}\nexport class ColorToMaterialConverter {\n  constructor(model) {\n    this.model = model;\n    this.colorToMaterialIndex = new Map();\n  }\n\n  GetMaterialIndex(r, g, b, a) {\n    let colorKey = IntegerToHexString(r) + IntegerToHexString(g) + IntegerToHexString(b);\n    let hasAlpha = a !== undefined && a !== null;\n\n    if (hasAlpha) {\n      colorKey += IntegerToHexString(a);\n    }\n\n    if (this.colorToMaterialIndex.has(colorKey)) {\n      return this.colorToMaterialIndex.get(colorKey);\n    } else {\n      let material = new PhongMaterial();\n      material.name = colorKey.toUpperCase();\n      material.color = new RGBColor(r, g, b);\n\n      if (hasAlpha && a < 255) {\n        material.opacity = a / 255.0;\n        UpdateMaterialTransparency(material);\n      }\n\n      let materialIndex = this.model.AddMaterial(material);\n      this.colorToMaterialIndex.set(colorKey, materialIndex);\n      return materialIndex;\n    }\n  }\n\n}","map":{"version":3,"names":["IsLower","PhongMaterial","RGBColor","IntegerToHexString","NameFromLine","line","startIndex","commentChar","name","substring","commentStart","indexOf","trim","ParametersFromLine","split","ReadLines","str","onLine","LineFound","trimmed","length","cursor","next","IsPowerOfTwo","x","NextPowerOfTwo","npot","Math","pow","ceil","log","parseInt","UpdateMaterialTransparency","material","transparent","opacity","ColorToMaterialConverter","constructor","model","colorToMaterialIndex","Map","GetMaterialIndex","r","g","b","a","colorKey","hasAlpha","undefined","has","get","toUpperCase","color","materialIndex","AddMaterial","set"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/import/importerutils.js"],"sourcesContent":["import { IsLower } from '../geometry/geometry.js';\r\nimport { PhongMaterial } from '../model/material.js';\r\nimport { RGBColor, IntegerToHexString } from '../model/color.js';\r\n\r\nexport function NameFromLine (line, startIndex, commentChar)\r\n{\r\n\tlet name = line.substring (startIndex);\r\n\tlet commentStart = name.indexOf (commentChar);\r\n\tif (commentStart !== -1) {\r\n\t\tname = name.substring (0, commentStart);\r\n\t}\r\n\treturn name.trim ();\r\n}\r\n\r\nexport function ParametersFromLine (line, commentChar)\r\n{\r\n\tif (commentChar !== null) {\r\n\t\tlet commentStart = line.indexOf (commentChar);\r\n\t\tif (commentStart !== -1) {\r\n\t\t\tline = line.substring (0, commentStart).trim ();\r\n\t\t}\r\n\t}\r\n\treturn line.split (/\\s+/u);\r\n}\r\n\r\nexport function ReadLines (str, onLine)\r\n{\r\n\tfunction LineFound (line, onLine)\r\n\t{\r\n\t\tlet trimmed = line.trim ();\r\n\t\tif (trimmed.length > 0) {\r\n\t\t\tonLine (trimmed);\r\n\t\t}\r\n\t}\r\n\r\n\tlet cursor = 0;\r\n\tlet next = str.indexOf ('\\n', cursor);\r\n\twhile (next !== -1) {\r\n\t\tLineFound (str.substring (cursor, next), onLine);\r\n\t\tcursor = next + 1;\r\n\t\tnext = str.indexOf ('\\n', cursor);\r\n\t}\r\n\tLineFound (str.substring (cursor), onLine);\r\n}\r\n\r\nexport function IsPowerOfTwo (x)\r\n{\r\n\treturn (x & (x - 1)) === 0;\r\n}\r\n\r\nexport function NextPowerOfTwo (x)\r\n{\r\n\tif (IsPowerOfTwo (x)) {\r\n\t\treturn x;\r\n\t}\r\n\tlet npot = Math.pow (2, Math.ceil (Math.log (x) / Math.log (2)));\r\n\treturn parseInt (npot, 10);\r\n}\r\n\r\nexport function UpdateMaterialTransparency (material)\r\n{\r\n\tmaterial.transparent = false;\r\n\tif (IsLower (material.opacity, 1.0)) {\r\n\t\tmaterial.transparent = true;\r\n\t}\r\n}\r\n\r\nexport class ColorToMaterialConverter\r\n{\r\n\tconstructor (model)\r\n\t{\r\n\t\tthis.model = model;\r\n\t\tthis.colorToMaterialIndex = new Map ();\r\n\t}\r\n\r\n\tGetMaterialIndex (r, g, b, a)\r\n\t{\r\n\t\tlet colorKey =\r\n\t\t\tIntegerToHexString (r) +\r\n\t\t\tIntegerToHexString (g) +\r\n\t\t\tIntegerToHexString (b);\r\n\t\tlet hasAlpha = (a !== undefined && a !== null);\r\n\t\tif (hasAlpha) {\r\n\t\t\tcolorKey += IntegerToHexString (a);\r\n\t\t}\r\n\r\n\t\tif (this.colorToMaterialIndex.has (colorKey)) {\r\n\t\t\treturn this.colorToMaterialIndex.get (colorKey);\r\n\t\t} else {\r\n            let material = new PhongMaterial ();\r\n            material.name = colorKey.toUpperCase ();\r\n            material.color = new RGBColor (r, g, b);\r\n            if (hasAlpha && a < 255) {\r\n                material.opacity = a / 255.0;\r\n                UpdateMaterialTransparency (material);\r\n            }\r\n            let materialIndex = this.model.AddMaterial (material);\r\n            this.colorToMaterialIndex.set (colorKey, materialIndex);\r\n            return materialIndex;\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}