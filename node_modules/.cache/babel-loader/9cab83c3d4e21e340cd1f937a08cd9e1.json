{"ast":null,"code":"import { IsEqual } from './geometry.js';\nexport class Coord3D {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  Length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  MultiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  }\n\n  Normalize() {\n    let length = this.Length();\n\n    if (length > 0.0) {\n      this.MultiplyScalar(1.0 / length);\n    }\n\n    return this;\n  }\n\n  Offset(direction, distance) {\n    let normal = direction.Clone().Normalize();\n    this.x += normal.x * distance;\n    this.y += normal.y * distance;\n    this.z += normal.z * distance;\n    return this;\n  }\n\n  Rotate(axis, angle, origo) {\n    let normal = axis.Clone().Normalize();\n    let u = normal.x;\n    let v = normal.y;\n    let w = normal.z;\n    let x = this.x - origo.x;\n    let y = this.y - origo.y;\n    let z = this.z - origo.z;\n    let si = Math.sin(angle);\n    let co = Math.cos(angle);\n    this.x = -u * (-u * x - v * y - w * z) * (1.0 - co) + x * co + (-w * y + v * z) * si;\n    this.y = -v * (-u * x - v * y - w * z) * (1.0 - co) + y * co + (w * x - u * z) * si;\n    this.z = -w * (-u * x - v * y - w * z) * (1.0 - co) + z * co + (-v * x + u * y) * si;\n    this.x += origo.x;\n    this.y += origo.y;\n    this.z += origo.z;\n    return this;\n  }\n\n  Clone() {\n    return new Coord3D(this.x, this.y, this.z);\n  }\n\n}\nexport function CoordIsEqual3D(a, b) {\n  return IsEqual(a.x, b.x) && IsEqual(a.y, b.y) && IsEqual(a.z, b.z);\n}\nexport function AddCoord3D(a, b) {\n  return new Coord3D(a.x + b.x, a.y + b.y, a.z + b.z);\n}\nexport function SubCoord3D(a, b) {\n  return new Coord3D(a.x - b.x, a.y - b.y, a.z - b.z);\n}\nexport function CoordDistance3D(a, b) {\n  return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y) + (a.z - b.z) * (a.z - b.z));\n}\nexport function DotVector3D(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n}\nexport function VectorAngle3D(a, b) {\n  let aDirection = a.Clone().Normalize();\n  let bDirection = b.Clone().Normalize();\n\n  if (CoordIsEqual3D(aDirection, bDirection)) {\n    return 0.0;\n  }\n\n  let product = DotVector3D(aDirection, bDirection);\n  return Math.acos(product);\n}\nexport function CrossVector3D(a, b) {\n  let result = new Coord3D(0.0, 0.0, 0.0);\n  result.x = a.y * b.z - a.z * b.y;\n  result.y = a.z * b.x - a.x * b.z;\n  result.z = a.x * b.y - a.y * b.x;\n  return result;\n}\nexport function VectorLength3D(x, y, z) {\n  return Math.sqrt(x * x + y * y + z * z);\n}\nexport function ArrayToCoord3D(arr) {\n  return new Coord3D(arr[0], arr[1], arr[2]);\n}","map":{"version":3,"names":["IsEqual","Coord3D","constructor","x","y","z","Length","Math","sqrt","MultiplyScalar","scalar","Normalize","length","Offset","direction","distance","normal","Clone","Rotate","axis","angle","origo","u","v","w","si","sin","co","cos","CoordIsEqual3D","a","b","AddCoord3D","SubCoord3D","CoordDistance3D","DotVector3D","VectorAngle3D","aDirection","bDirection","product","acos","CrossVector3D","result","VectorLength3D","ArrayToCoord3D","arr"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/geometry/coord3d.js"],"sourcesContent":["import { IsEqual } from './geometry.js';\r\n\r\nexport class Coord3D\r\n{\r\n\tconstructor (x, y, z)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\r\n\tLength ()\r\n\t{\r\n\t\treturn Math.sqrt (this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t}\r\n\r\n\tMultiplyScalar (scalar)\r\n\t{\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tNormalize ()\r\n\t{\r\n\t\tlet length = this.Length ();\r\n\t\tif (length > 0.0) {\r\n\t\t\tthis.MultiplyScalar (1.0 / length);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tOffset (direction, distance)\r\n\t{\r\n\t\tlet normal = direction.Clone ().Normalize ();\r\n\t\tthis.x += normal.x * distance;\r\n\t\tthis.y += normal.y * distance;\r\n\t\tthis.z += normal.z * distance;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tRotate (axis, angle, origo)\r\n\t{\r\n\t\tlet normal = axis.Clone ().Normalize ();\r\n\r\n\t\tlet u = normal.x;\r\n\t\tlet v = normal.y;\r\n\t\tlet w = normal.z;\r\n\r\n\t\tlet x = this.x - origo.x;\r\n\t\tlet y = this.y - origo.y;\r\n\t\tlet z = this.z - origo.z;\r\n\r\n\t\tlet si = Math.sin (angle);\r\n\t\tlet co = Math.cos (angle);\r\n\t\tthis.x = - u * (- u * x - v * y - w * z) * (1.0 - co) + x * co + (- w * y + v * z) * si;\r\n\t\tthis.y = - v * (- u * x - v * y - w * z) * (1.0 - co) + y * co + (w * x - u * z) * si;\r\n\t\tthis.z = - w * (- u * x - v * y - w * z) * (1.0 - co) + z * co + (- v * x + u * y) * si;\r\n\r\n\t\tthis.x += origo.x;\r\n\t\tthis.y += origo.y;\r\n\t\tthis.z += origo.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tClone ()\r\n\t{\r\n\t\treturn new Coord3D (this.x, this.y, this.z);\r\n\t}\r\n}\r\n\r\nexport function CoordIsEqual3D (a, b)\r\n{\r\n\treturn IsEqual (a.x, b.x) && IsEqual (a.y, b.y) && IsEqual (a.z, b.z);\r\n}\r\n\r\nexport function AddCoord3D (a, b)\r\n{\r\n\treturn new Coord3D (a.x + b.x, a.y + b.y, a.z + b.z);\r\n}\r\n\r\nexport function SubCoord3D (a, b)\r\n{\r\n\treturn new Coord3D (a.x - b.x, a.y - b.y, a.z - b.z);\r\n}\r\n\r\nexport function CoordDistance3D (a, b)\r\n{\r\n\treturn Math.sqrt ((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y) + (a.z - b.z) * (a.z - b.z));\r\n}\r\n\r\nexport function DotVector3D (a, b)\r\n{\r\n\treturn a.x * b.x + a.y * b.y + a.z * b.z;\r\n}\r\n\r\nexport function VectorAngle3D (a, b)\r\n{\r\n\tlet aDirection = a.Clone ().Normalize ();\r\n\tlet bDirection = b.Clone ().Normalize ();\r\n\tif (CoordIsEqual3D (aDirection, bDirection)) {\r\n\t\treturn 0.0;\r\n\t}\r\n\tlet product = DotVector3D (aDirection, bDirection);\r\n\treturn Math.acos (product);\r\n}\r\n\r\nexport function CrossVector3D (a, b)\r\n{\r\n\tlet result = new Coord3D (0.0, 0.0, 0.0);\r\n\tresult.x = a.y * b.z - a.z * b.y;\r\n\tresult.y = a.z * b.x - a.x * b.z;\r\n\tresult.z = a.x * b.y - a.y * b.x;\r\n\treturn result;\r\n}\r\n\r\nexport function VectorLength3D (x, y, z)\r\n{\r\n\treturn Math.sqrt (x * x + y * y + z * z);\r\n}\r\n\r\nexport function ArrayToCoord3D (arr)\r\n{\r\n\treturn new Coord3D (arr[0], arr[1], arr[2]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}