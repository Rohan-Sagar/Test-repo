{"ast":null,"code":"import { Coord3D } from '../geometry/coord3d.js';\nimport { RGBAColor, RGBColor } from '../model/color.js';\nimport { Camera } from '../viewer/camera.js';\nimport { CameraMode } from '../viewer/viewer.js';\nexport let ParameterConverter = {\n  IntegerToString(integer) {\n    return integer.toString();\n  },\n\n  StringToInteger(str) {\n    return parseInt(str, 10);\n  },\n\n  NumberToString(number) {\n    let precision = 5;\n    return number.toFixed(precision);\n  },\n\n  StringToNumber(str) {\n    return parseFloat(str);\n  },\n\n  ModelUrlsToString: function (urls) {\n    if (urls === null) {\n      return null;\n    }\n\n    return urls.join(',');\n  },\n  StringToModelUrls: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    return str.split(',');\n  },\n  CameraToString: function (camera) {\n    if (camera === null) {\n      return null;\n    }\n\n    let cameraParameters = [this.NumberToString(camera.eye.x), this.NumberToString(camera.eye.y), this.NumberToString(camera.eye.z), this.NumberToString(camera.center.x), this.NumberToString(camera.center.y), this.NumberToString(camera.center.z), this.NumberToString(camera.up.x), this.NumberToString(camera.up.y), this.NumberToString(camera.up.z), this.NumberToString(camera.fov)].join(',');\n    return cameraParameters;\n  },\n  CameraModeToString: function (cameraMode) {\n    if (cameraMode === CameraMode.Perspective) {\n      return 'perspective';\n    } else if (cameraMode === CameraMode.Orthographic) {\n      return 'orthographic';\n    }\n\n    return null;\n  },\n  StringToCamera: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    let paramParts = str.split(',');\n\n    if (paramParts.length !== 9 && paramParts.length !== 10) {\n      return null;\n    }\n\n    let fieldOfView = 45.0;\n\n    if (paramParts.length >= 10) {\n      fieldOfView = this.StringToNumber(paramParts[9]);\n    }\n\n    let camera = new Camera(new Coord3D(this.StringToNumber(paramParts[0]), this.StringToNumber(paramParts[1]), this.StringToNumber(paramParts[2])), new Coord3D(this.StringToNumber(paramParts[3]), this.StringToNumber(paramParts[4]), this.StringToNumber(paramParts[5])), new Coord3D(this.StringToNumber(paramParts[6]), this.StringToNumber(paramParts[7]), this.StringToNumber(paramParts[8])), fieldOfView);\n    return camera;\n  },\n  StringToCameraMode: function (str) {\n    if (str === 'perspective') {\n      return CameraMode.Perspective;\n    } else if (str === 'orthographic') {\n      return CameraMode.Orthographic;\n    }\n\n    return null;\n  },\n  RGBColorToString: function (color) {\n    if (color === null) {\n      return null;\n    }\n\n    return [this.IntegerToString(color.r), this.IntegerToString(color.g), this.IntegerToString(color.b)].join(',');\n  },\n  RGBAColorToString: function (color) {\n    if (color === null) {\n      return null;\n    }\n\n    return [this.IntegerToString(color.r), this.IntegerToString(color.g), this.IntegerToString(color.b), this.IntegerToString(color.a)].join(',');\n  },\n  StringToRGBColor: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    let paramParts = str.split(',');\n\n    if (paramParts.length !== 3) {\n      return null;\n    }\n\n    return new RGBColor(this.StringToInteger(paramParts[0]), this.StringToInteger(paramParts[1]), this.StringToInteger(paramParts[2]));\n  },\n  StringToRGBAColor: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    let paramParts = str.split(',');\n\n    if (paramParts.length !== 3 && paramParts.length !== 4) {\n      return null;\n    }\n\n    let color = new RGBAColor(this.StringToInteger(paramParts[0]), this.StringToInteger(paramParts[1]), this.StringToInteger(paramParts[2]), 255);\n\n    if (paramParts.length === 4) {\n      color.a = this.StringToInteger(paramParts[3]);\n    }\n\n    return color;\n  },\n\n  EnvironmentSettingsToString(environmentSettings) {\n    if (environmentSettings === null) {\n      return null;\n    }\n\n    let environmentSettingsParameters = [environmentSettings.environmentMapName, environmentSettings.backgroundIsEnvMap ? 'on' : 'off'].join(',');\n    return environmentSettingsParameters;\n  },\n\n  StringToEnvironmentSettings: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    let paramParts = str.split(',');\n\n    if (paramParts.length !== 2) {\n      return null;\n    }\n\n    let environmentSettings = {\n      environmentMapName: paramParts[0],\n      backgroundIsEnvMap: paramParts[1] === 'on' ? true : false\n    };\n    return environmentSettings;\n  },\n  EdgeSettingsToString: function (edgeSettings) {\n    if (edgeSettings === null) {\n      return null;\n    }\n\n    let edgeSettingsParameters = [edgeSettings.showEdges ? 'on' : 'off', this.RGBColorToString(edgeSettings.edgeColor), this.IntegerToString(edgeSettings.edgeThreshold)].join(',');\n    return edgeSettingsParameters;\n  },\n  StringToEdgeSettings: function (str) {\n    if (str === null || str.length === 0) {\n      return null;\n    }\n\n    let paramParts = str.split(',');\n\n    if (paramParts.length !== 5) {\n      return null;\n    }\n\n    let edgeSettings = {\n      showEdges: paramParts[0] === 'on' ? true : false,\n      edgeColor: new RGBColor(this.StringToInteger(paramParts[1]), this.StringToInteger(paramParts[2]), this.StringToInteger(paramParts[3])),\n      edgeThreshold: this.StringToInteger(paramParts[4])\n    };\n    return edgeSettings;\n  }\n};\nexport class ParameterListBuilder {\n  constructor(separator) {\n    this.separator = separator;\n    this.paramList = '';\n  }\n\n  AddModelUrls(urls) {\n    this.AddUrlPart('model', ParameterConverter.ModelUrlsToString(urls));\n    return this;\n  }\n\n  AddCamera(camera) {\n    this.AddUrlPart('camera', ParameterConverter.CameraToString(camera));\n    return this;\n  }\n\n  AddCameraMode(cameraMode) {\n    this.AddUrlPart('cameramode', ParameterConverter.CameraModeToString(cameraMode));\n    return this;\n  }\n\n  AddEnvironmentSettings(envSettings) {\n    this.AddUrlPart('envsettings', ParameterConverter.EnvironmentSettingsToString(envSettings));\n    return this;\n  }\n\n  AddBackgroundColor(background) {\n    this.AddUrlPart('backgroundcolor', ParameterConverter.RGBAColorToString(background));\n    return this;\n  }\n\n  AddDefaultColor(color) {\n    this.AddUrlPart('defaultcolor', ParameterConverter.RGBColorToString(color));\n    return this;\n  }\n\n  AddEdgeSettings(edgeSettings) {\n    this.AddUrlPart('edgesettings', ParameterConverter.EdgeSettingsToString(edgeSettings));\n    return this;\n  }\n\n  AddUrlPart(keyword, urlPart) {\n    if (keyword === null || urlPart === null) {\n      return;\n    }\n\n    if (this.paramList.length > 0) {\n      this.paramList += this.separator;\n    }\n\n    this.paramList += keyword + '=' + urlPart;\n  }\n\n  GetParameterList() {\n    return this.paramList;\n  }\n\n}\nexport class ParameterListParser {\n  constructor(paramList, separator) {\n    this.separator = separator;\n    this.paramList = paramList;\n  }\n\n  GetModelUrls() {\n    // detect legacy links\n    if (this.paramList.indexOf('=') === -1) {\n      return this.paramList.split(',');\n    }\n\n    let keywordParams = this.GetKeywordParams('model');\n    return ParameterConverter.StringToModelUrls(keywordParams);\n  }\n\n  GetCamera() {\n    let keywordParams = this.GetKeywordParams('camera');\n    return ParameterConverter.StringToCamera(keywordParams);\n  }\n\n  GetCameraMode() {\n    let keywordParams = this.GetKeywordParams('cameramode');\n    return ParameterConverter.StringToCameraMode(keywordParams);\n  }\n\n  GetEnvironmentSettings() {\n    let environmentSettingsParams = this.GetKeywordParams('envsettings');\n    return ParameterConverter.StringToEnvironmentSettings(environmentSettingsParams);\n  }\n\n  GetBackgroundColor() {\n    let backgroundParams = this.GetKeywordParams('backgroundcolor');\n    return ParameterConverter.StringToRGBAColor(backgroundParams);\n  }\n\n  GetDefaultColor() {\n    let colorParams = this.GetKeywordParams('defaultcolor');\n    return ParameterConverter.StringToRGBColor(colorParams);\n  }\n\n  GetEdgeSettings() {\n    let edgeSettingsParams = this.GetKeywordParams('edgesettings');\n    return ParameterConverter.StringToEdgeSettings(edgeSettingsParams);\n  }\n\n  GetKeywordParams(keyword) {\n    if (this.paramList === null || this.paramList.length === 0) {\n      return null;\n    }\n\n    let keywordToken = keyword + '=';\n    let urlParts = this.paramList.split(this.separator);\n\n    for (let i = 0; i < urlParts.length; i++) {\n      let urlPart = urlParts[i];\n\n      if (urlPart.startsWith(keywordToken)) {\n        return urlPart.substring(keywordToken.length);\n      }\n    }\n\n    return null;\n  }\n\n}\nexport function CreateUrlBuilder() {\n  return new ParameterListBuilder('$');\n}\nexport function CreateUrlParser(urlParams) {\n  return new ParameterListParser(urlParams, '$');\n}\nexport function CreateModelUrlParameters(urls) {\n  let builder = CreateUrlBuilder();\n  builder.AddModelUrls(urls);\n  return builder.GetParameterList();\n}","map":{"version":3,"names":["Coord3D","RGBAColor","RGBColor","Camera","CameraMode","ParameterConverter","IntegerToString","integer","toString","StringToInteger","str","parseInt","NumberToString","number","precision","toFixed","StringToNumber","parseFloat","ModelUrlsToString","urls","join","StringToModelUrls","length","split","CameraToString","camera","cameraParameters","eye","x","y","z","center","up","fov","CameraModeToString","cameraMode","Perspective","Orthographic","StringToCamera","paramParts","fieldOfView","StringToCameraMode","RGBColorToString","color","r","g","b","RGBAColorToString","a","StringToRGBColor","StringToRGBAColor","EnvironmentSettingsToString","environmentSettings","environmentSettingsParameters","environmentMapName","backgroundIsEnvMap","StringToEnvironmentSettings","EdgeSettingsToString","edgeSettings","edgeSettingsParameters","showEdges","edgeColor","edgeThreshold","StringToEdgeSettings","ParameterListBuilder","constructor","separator","paramList","AddModelUrls","AddUrlPart","AddCamera","AddCameraMode","AddEnvironmentSettings","envSettings","AddBackgroundColor","background","AddDefaultColor","AddEdgeSettings","keyword","urlPart","GetParameterList","ParameterListParser","GetModelUrls","indexOf","keywordParams","GetKeywordParams","GetCamera","GetCameraMode","GetEnvironmentSettings","environmentSettingsParams","GetBackgroundColor","backgroundParams","GetDefaultColor","colorParams","GetEdgeSettings","edgeSettingsParams","keywordToken","urlParts","i","startsWith","substring","CreateUrlBuilder","CreateUrlParser","urlParams","CreateModelUrlParameters","builder"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/parameters/parameterlist.js"],"sourcesContent":["import { Coord3D } from '../geometry/coord3d.js';\r\nimport { RGBAColor, RGBColor } from '../model/color.js';\r\nimport { Camera } from '../viewer/camera.js';\r\nimport { CameraMode } from '../viewer/viewer.js';\r\n\r\nexport let ParameterConverter =\r\n{\r\n    IntegerToString (integer)\r\n    {\r\n        return integer.toString ();\r\n    },\r\n\r\n    StringToInteger (str)\r\n    {\r\n        return parseInt (str, 10);\r\n    },\r\n\r\n    NumberToString (number)\r\n    {\r\n        let precision = 5;\r\n        return number.toFixed (precision);\r\n    },\r\n\r\n    StringToNumber (str)\r\n    {\r\n        return parseFloat (str);\r\n    },\r\n\r\n    ModelUrlsToString : function (urls)\r\n    {\r\n        if (urls === null) {\r\n            return null;\r\n        }\r\n        return urls.join (',');\r\n    },\r\n\r\n    StringToModelUrls : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        return str.split (',');\r\n    },\r\n\r\n    CameraToString : function (camera)\r\n    {\r\n        if (camera === null) {\r\n            return null;\r\n        }\r\n        let cameraParameters = [\r\n            this.NumberToString (camera.eye.x), this.NumberToString (camera.eye.y), this.NumberToString (camera.eye.z),\r\n            this.NumberToString (camera.center.x), this.NumberToString (camera.center.y), this.NumberToString (camera.center.z),\r\n            this.NumberToString (camera.up.x), this.NumberToString (camera.up.y), this.NumberToString (camera.up.z),\r\n            this.NumberToString (camera.fov)\r\n        ].join (',');\r\n        return cameraParameters;\r\n    },\r\n\r\n    CameraModeToString : function (cameraMode)\r\n    {\r\n        if (cameraMode === CameraMode.Perspective) {\r\n            return 'perspective';\r\n        } else if (cameraMode === CameraMode.Orthographic) {\r\n            return 'orthographic';\r\n        }\r\n        return null;\r\n    },\r\n\r\n    StringToCamera : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        let paramParts = str.split (',');\r\n        if (paramParts.length !== 9 && paramParts.length !== 10) {\r\n            return null;\r\n        }\r\n\r\n        let fieldOfView = 45.0;\r\n        if (paramParts.length >= 10) {\r\n            fieldOfView = this.StringToNumber (paramParts[9]);\r\n        }\r\n\r\n        let camera = new Camera (\r\n            new Coord3D (this.StringToNumber (paramParts[0]), this.StringToNumber (paramParts[1]), this.StringToNumber (paramParts[2])),\r\n            new Coord3D (this.StringToNumber (paramParts[3]), this.StringToNumber (paramParts[4]), this.StringToNumber (paramParts[5])),\r\n            new Coord3D (this.StringToNumber (paramParts[6]), this.StringToNumber (paramParts[7]), this.StringToNumber (paramParts[8])),\r\n            fieldOfView\r\n        );\r\n        return camera;\r\n    },\r\n\r\n    StringToCameraMode : function (str)\r\n    {\r\n        if (str === 'perspective') {\r\n            return CameraMode.Perspective;\r\n        } else if (str === 'orthographic') {\r\n            return CameraMode.Orthographic;\r\n        }\r\n        return null;\r\n    },\r\n\r\n    RGBColorToString : function (color)\r\n    {\r\n        if (color === null) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.IntegerToString (color.r),\r\n            this.IntegerToString (color.g),\r\n            this.IntegerToString (color.b)\r\n        ].join (',');\r\n    },\r\n\r\n    RGBAColorToString : function (color)\r\n    {\r\n        if (color === null) {\r\n            return null;\r\n        }\r\n        return [\r\n            this.IntegerToString (color.r),\r\n            this.IntegerToString (color.g),\r\n            this.IntegerToString (color.b),\r\n            this.IntegerToString (color.a)\r\n        ].join (',');\r\n    },\r\n\r\n    StringToRGBColor : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        let paramParts = str.split (',');\r\n        if (paramParts.length !== 3) {\r\n            return null;\r\n        }\r\n        return new RGBColor (\r\n            this.StringToInteger (paramParts[0]),\r\n            this.StringToInteger (paramParts[1]),\r\n            this.StringToInteger (paramParts[2])\r\n        );\r\n    },\r\n\r\n    StringToRGBAColor : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        let paramParts = str.split (',');\r\n        if (paramParts.length !== 3 && paramParts.length !== 4) {\r\n            return null;\r\n        }\r\n        let color = new RGBAColor (\r\n            this.StringToInteger (paramParts[0]),\r\n            this.StringToInteger (paramParts[1]),\r\n            this.StringToInteger (paramParts[2]),\r\n            255\r\n        );\r\n        if (paramParts.length === 4) {\r\n            color.a = this.StringToInteger (paramParts[3]);\r\n        }\r\n        return color;\r\n    },\r\n\r\n    EnvironmentSettingsToString (environmentSettings)\r\n    {\r\n        if (environmentSettings === null) {\r\n            return null;\r\n        }\r\n        let environmentSettingsParameters = [\r\n            environmentSettings.environmentMapName,\r\n            environmentSettings.backgroundIsEnvMap ? 'on' : 'off'\r\n        ].join (',');\r\n        return environmentSettingsParameters;\r\n    },\r\n\r\n    StringToEnvironmentSettings : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        let paramParts = str.split (',');\r\n        if (paramParts.length !== 2) {\r\n            return null;\r\n        }\r\n        let environmentSettings = {\r\n            environmentMapName : paramParts[0],\r\n            backgroundIsEnvMap : paramParts[1] === 'on' ? true : false\r\n        };\r\n        return environmentSettings;\r\n    },\r\n\r\n    EdgeSettingsToString : function (edgeSettings)\r\n    {\r\n        if (edgeSettings === null) {\r\n            return null;\r\n        }\r\n        let edgeSettingsParameters = [\r\n            edgeSettings.showEdges ? 'on' : 'off',\r\n            this.RGBColorToString (edgeSettings.edgeColor),\r\n            this.IntegerToString (edgeSettings.edgeThreshold),\r\n        ].join (',');\r\n        return edgeSettingsParameters;\r\n    },\r\n\r\n    StringToEdgeSettings : function (str)\r\n    {\r\n        if (str === null || str.length === 0) {\r\n            return null;\r\n        }\r\n        let paramParts = str.split (',');\r\n        if (paramParts.length !== 5) {\r\n            return null;\r\n        }\r\n        let edgeSettings = {\r\n            showEdges : paramParts[0] === 'on' ? true : false,\r\n            edgeColor : new RGBColor (\r\n                this.StringToInteger (paramParts[1]),\r\n                this.StringToInteger (paramParts[2]),\r\n                this.StringToInteger (paramParts[3])\r\n            ),\r\n            edgeThreshold : this.StringToInteger (paramParts[4])\r\n        };\r\n        return edgeSettings;\r\n    }\r\n};\r\n\r\nexport class ParameterListBuilder\r\n{\r\n    constructor (separator)\r\n    {\r\n        this.separator = separator;\r\n        this.paramList = '';\r\n    }\r\n\r\n    AddModelUrls (urls)\r\n    {\r\n        this.AddUrlPart ('model', ParameterConverter.ModelUrlsToString (urls));\r\n        return this;\r\n    }\r\n\r\n    AddCamera (camera)\r\n    {\r\n        this.AddUrlPart ('camera', ParameterConverter.CameraToString (camera));\r\n        return this;\r\n    }\r\n\r\n    AddCameraMode (cameraMode)\r\n    {\r\n        this.AddUrlPart ('cameramode', ParameterConverter.CameraModeToString (cameraMode));\r\n        return this;\r\n    }\r\n\r\n    AddEnvironmentSettings (envSettings)\r\n    {\r\n        this.AddUrlPart ('envsettings', ParameterConverter.EnvironmentSettingsToString (envSettings));\r\n        return this;\r\n    }\r\n\r\n    AddBackgroundColor (background)\r\n    {\r\n        this.AddUrlPart ('backgroundcolor', ParameterConverter.RGBAColorToString (background));\r\n        return this;\r\n    }\r\n\r\n    AddDefaultColor (color)\r\n    {\r\n        this.AddUrlPart ('defaultcolor', ParameterConverter.RGBColorToString (color));\r\n        return this;\r\n    }\r\n\r\n    AddEdgeSettings (edgeSettings)\r\n    {\r\n        this.AddUrlPart ('edgesettings', ParameterConverter.EdgeSettingsToString (edgeSettings));\r\n        return this;\r\n    }\r\n\r\n    AddUrlPart (keyword, urlPart)\r\n    {\r\n        if (keyword === null || urlPart === null) {\r\n            return;\r\n        }\r\n        if (this.paramList.length > 0) {\r\n            this.paramList += this.separator;\r\n        }\r\n        this.paramList += keyword + '=' + urlPart;\r\n    }\r\n\r\n    GetParameterList ()\r\n    {\r\n        return this.paramList;\r\n    }\r\n}\r\n\r\nexport class ParameterListParser\r\n{\r\n    constructor (paramList, separator)\r\n    {\r\n        this.separator = separator;\r\n        this.paramList = paramList;\r\n    }\r\n\r\n    GetModelUrls ()\r\n    {\r\n        // detect legacy links\r\n        if (this.paramList.indexOf ('=') === -1) {\r\n            return this.paramList.split (',');\r\n        }\r\n\r\n        let keywordParams = this.GetKeywordParams ('model');\r\n        return ParameterConverter.StringToModelUrls (keywordParams);\r\n    }\r\n\r\n    GetCamera ()\r\n    {\r\n        let keywordParams = this.GetKeywordParams ('camera');\r\n        return ParameterConverter.StringToCamera (keywordParams);\r\n    }\r\n\r\n    GetCameraMode ()\r\n    {\r\n        let keywordParams = this.GetKeywordParams ('cameramode');\r\n        return ParameterConverter.StringToCameraMode (keywordParams);\r\n    }\r\n\r\n    GetEnvironmentSettings ()\r\n    {\r\n        let environmentSettingsParams = this.GetKeywordParams ('envsettings');\r\n        return ParameterConverter.StringToEnvironmentSettings (environmentSettingsParams);\r\n    }\r\n\r\n    GetBackgroundColor ()\r\n    {\r\n        let backgroundParams = this.GetKeywordParams ('backgroundcolor');\r\n        return ParameterConverter.StringToRGBAColor (backgroundParams);\r\n    }\r\n\r\n    GetDefaultColor ()\r\n    {\r\n        let colorParams = this.GetKeywordParams ('defaultcolor');\r\n        return ParameterConverter.StringToRGBColor (colorParams);\r\n    }\r\n\r\n    GetEdgeSettings ()\r\n    {\r\n        let edgeSettingsParams = this.GetKeywordParams ('edgesettings');\r\n        return ParameterConverter.StringToEdgeSettings (edgeSettingsParams);\r\n    }\r\n\r\n    GetKeywordParams (keyword)\r\n    {\r\n        if (this.paramList === null || this.paramList.length === 0) {\r\n            return null;\r\n        }\r\n        let keywordToken = keyword + '=';\r\n        let urlParts = this.paramList.split (this.separator);\r\n        for (let i = 0; i < urlParts.length; i++) {\r\n            let urlPart = urlParts[i];\r\n            if (urlPart.startsWith (keywordToken)) {\r\n                return urlPart.substring (keywordToken.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function CreateUrlBuilder ()\r\n{\r\n    return new ParameterListBuilder ('$');\r\n}\r\n\r\nexport function CreateUrlParser (urlParams)\r\n{\r\n    return new ParameterListParser (urlParams, '$');\r\n}\r\n\r\nexport function CreateModelUrlParameters (urls)\r\n{\r\n    let builder = CreateUrlBuilder ();\r\n    builder.AddModelUrls (urls);\r\n    return builder.GetParameterList ();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}