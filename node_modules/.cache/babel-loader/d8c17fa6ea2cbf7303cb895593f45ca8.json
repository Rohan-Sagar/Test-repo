{"ast":null,"code":"import { IsEqual } from './geometry.js';\nexport class Quaternion {\n  constructor(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n\n}\nexport function QuaternionIsEqual(a, b) {\n  return IsEqual(a.x, b.x) && IsEqual(a.y, b.y) && IsEqual(a.z, b.z) && IsEqual(a.w, b.w);\n}\nexport function ArrayToQuaternion(arr) {\n  return new Quaternion(arr[0], arr[1], arr[2], arr[3]);\n}\nexport function QuaternionFromAxisAngle(axis, angle) {\n  const a = angle / 2.0;\n  const s = Math.sin(a);\n  return new Quaternion(axis.x * s, axis.y * s, axis.z * s, Math.cos(a));\n}\nexport function QuaternionFromXYZ(x, y, z, mode) {\n  const c1 = Math.cos(x / 2.0);\n  const c2 = Math.cos(y / 2.0);\n  const c3 = Math.cos(z / 2.0);\n  const s1 = Math.sin(x / 2.0);\n  const s2 = Math.sin(y / 2.0);\n  const s3 = Math.sin(z / 2.0);\n  let quaternion = new Quaternion(0.0, 0.0, 0.0, 1.0);\n\n  if (mode === 'XYZ') {\n    quaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (mode === 'YXZ') {\n    quaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\n  } else if (mode === 'ZXY') {\n    quaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (mode === 'ZYX') {\n    quaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\n  } else if (mode === 'YZX') {\n    quaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (mode === 'XZY') {\n    quaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\n    quaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\n    quaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\n    quaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\n  } else {\n    return null;\n  }\n\n  return quaternion;\n}","map":{"version":3,"names":["IsEqual","Quaternion","constructor","x","y","z","w","QuaternionIsEqual","a","b","ArrayToQuaternion","arr","QuaternionFromAxisAngle","axis","angle","s","Math","sin","cos","QuaternionFromXYZ","mode","c1","c2","c3","s1","s2","s3","quaternion"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/geometry/quaternion.js"],"sourcesContent":["import { IsEqual } from './geometry.js';\r\n\r\nexport class Quaternion\r\n{\r\n\tconstructor (x, y, z, w)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n        this.w = w;\r\n\t}\r\n}\r\n\r\nexport function QuaternionIsEqual (a, b)\r\n{\r\n\treturn IsEqual (a.x, b.x) && IsEqual (a.y, b.y) && IsEqual (a.z, b.z) && IsEqual (a.w, b.w);\r\n}\r\n\r\nexport function ArrayToQuaternion (arr)\r\n{\r\n\treturn new Quaternion (arr[0], arr[1], arr[2], arr[3]);\r\n}\r\n\r\nexport function QuaternionFromAxisAngle (axis, angle)\r\n{\r\n\tconst a = angle / 2.0;\r\n\tconst s = Math.sin (a);\r\n\r\n\treturn new Quaternion (\r\n\t\taxis.x * s,\r\n\t\taxis.y * s,\r\n\t\taxis.z * s,\r\n\t\tMath.cos (a)\r\n\t);\r\n}\r\n\r\nexport function QuaternionFromXYZ (x, y, z, mode) {\r\n\r\n\tconst c1 = Math.cos (x / 2.0);\r\n\tconst c2 = Math.cos (y / 2.0);\r\n\tconst c3 = Math.cos (z / 2.0);\r\n\r\n\tconst s1 = Math.sin (x / 2.0);\r\n\tconst s2 = Math.sin (y / 2.0);\r\n\tconst s3 = Math.sin (z / 2.0);\r\n\r\n\tlet quaternion = new Quaternion (0.0, 0.0, 0.0, 1.0);\r\n\tif (mode === 'XYZ') {\r\n\t\tquaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t} else if (mode === 'YXZ') {\r\n\t\tquaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t} else if (mode === 'ZXY') {\r\n\t\tquaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t} else if (mode === 'ZYX') {\r\n\t\tquaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t} else if (mode === 'YZX') {\r\n\t\tquaternion.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t} else if (mode === 'XZY') {\r\n\t\tquaternion.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\tquaternion.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\tquaternion.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\tquaternion.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn quaternion;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}