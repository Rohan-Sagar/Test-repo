{"ast":null,"code":"export class RGBColor {\n  constructor(r, g, b) {\n    this.r = r; // 0 .. 255\n\n    this.g = g; // 0 .. 255\n\n    this.b = b; // 0 .. 255\n  }\n\n  Set(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  Clone() {\n    return new RGBColor(this.r, this.g, this.b);\n  }\n\n}\nexport class RGBAColor {\n  constructor(r, g, b, a) {\n    this.r = r; // 0 .. 255\n\n    this.g = g; // 0 .. 255\n\n    this.b = b; // 0 .. 255\n\n    this.a = a; // 0 .. 255\n  }\n\n  Set(r, g, b, a) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  Clone() {\n    return new RGBAColor(this.r, this.g, this.b, this.a);\n  }\n\n}\nexport function ColorComponentFromFloat(component) {\n  return parseInt(Math.round(component * 255.0), 10);\n}\nexport function ColorComponentToFloat(component) {\n  return component / 255.0;\n}\nexport function RGBColorFromFloatComponents(r, g, b) {\n  return new RGBColor(ColorComponentFromFloat(r), ColorComponentFromFloat(g), ColorComponentFromFloat(b));\n}\nexport function SRGBToLinear(component) {\n  if (component < 0.04045) {\n    return component * 0.0773993808;\n  } else {\n    return Math.pow(component * 0.9478672986 + 0.0521327014, 2.4);\n  }\n}\nexport function LinearToSRGB(component) {\n  if (component < 0.0031308) {\n    return component * 12.92;\n  } else {\n    return 1.055 * Math.pow(component, 0.41666) - 0.055;\n  }\n}\nexport function IntegerToHexString(intVal) {\n  let result = parseInt(intVal, 10).toString(16);\n\n  while (result.length < 2) {\n    result = '0' + result;\n  }\n\n  return result;\n}\nexport function RGBColorToHexString(color) {\n  let r = IntegerToHexString(color.r);\n  let g = IntegerToHexString(color.g);\n  let b = IntegerToHexString(color.b);\n  return r + g + b;\n}\nexport function RGBAColorToHexString(color) {\n  let r = IntegerToHexString(color.r);\n  let g = IntegerToHexString(color.g);\n  let b = IntegerToHexString(color.b);\n  let a = IntegerToHexString(color.a);\n  return r + g + b + a;\n}\nexport function HexStringToRGBColor(hexString) {\n  if (hexString.length !== 6) {\n    return null;\n  }\n\n  let r = parseInt(hexString.substring(0, 2), 16);\n  let g = parseInt(hexString.substring(2, 4), 16);\n  let b = parseInt(hexString.substring(4, 6), 16);\n  return new RGBColor(r, g, b);\n}\nexport function ArrayToRGBColor(arr) {\n  return new RGBColor(arr[0], arr[1], arr[2]);\n}\nexport function RGBColorIsEqual(a, b) {\n  return a.r === b.r && a.g === b.g && a.b === b.b;\n}","map":{"version":3,"names":["RGBColor","constructor","r","g","b","Set","Clone","RGBAColor","a","ColorComponentFromFloat","component","parseInt","Math","round","ColorComponentToFloat","RGBColorFromFloatComponents","SRGBToLinear","pow","LinearToSRGB","IntegerToHexString","intVal","result","toString","length","RGBColorToHexString","color","RGBAColorToHexString","HexStringToRGBColor","hexString","substring","ArrayToRGBColor","arr","RGBColorIsEqual"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/model/color.js"],"sourcesContent":["export class RGBColor\r\n{\r\n    constructor (r, g, b)\r\n    {\r\n        this.r = r; // 0 .. 255\r\n        this.g = g; // 0 .. 255\r\n        this.b = b; // 0 .. 255\r\n    }\r\n\r\n    Set (r, g, b)\r\n    {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n    }\r\n\r\n    Clone ()\r\n    {\r\n        return new RGBColor (this.r, this.g, this.b);\r\n    }\r\n}\r\n\r\nexport class RGBAColor\r\n{\r\n    constructor (r, g, b, a)\r\n    {\r\n        this.r = r; // 0 .. 255\r\n        this.g = g; // 0 .. 255\r\n        this.b = b; // 0 .. 255\r\n        this.a = a; // 0 .. 255\r\n    }\r\n\r\n    Set (r, g, b, a)\r\n    {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    Clone ()\r\n    {\r\n        return new RGBAColor (this.r, this.g, this.b, this.a);\r\n    }\r\n}\r\n\r\nexport function ColorComponentFromFloat (component)\r\n{\r\n    return parseInt (Math.round (component * 255.0), 10);\r\n}\r\n\r\nexport function ColorComponentToFloat (component)\r\n{\r\n    return component / 255.0;\r\n}\r\n\r\nexport function RGBColorFromFloatComponents (r, g, b)\r\n{\r\n    return new RGBColor (\r\n        ColorComponentFromFloat (r),\r\n        ColorComponentFromFloat (g),\r\n        ColorComponentFromFloat (b)\r\n    );\r\n}\r\n\r\nexport function SRGBToLinear (component)\r\n{\r\n    if (component < 0.04045) {\r\n        return component * 0.0773993808;\r\n    } else {\r\n        return Math.pow (component * 0.9478672986 + 0.0521327014, 2.4);\r\n    }\r\n}\r\n\r\nexport function LinearToSRGB (component)\r\n{\r\n    if (component < 0.0031308) {\r\n        return component * 12.92;\r\n    } else {\r\n        return 1.055 * (Math.pow (component, 0.41666)) - 0.055;\r\n    }\r\n}\r\n\r\nexport function IntegerToHexString (intVal)\r\n{\r\n    let result = parseInt (intVal, 10).toString (16);\r\n    while (result.length < 2) {\r\n        result = '0' + result;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function RGBColorToHexString (color)\r\n{\r\n    let r = IntegerToHexString (color.r);\r\n    let g = IntegerToHexString (color.g);\r\n    let b = IntegerToHexString (color.b);\r\n    return r + g + b;\r\n}\r\n\r\nexport function RGBAColorToHexString (color)\r\n{\r\n    let r = IntegerToHexString (color.r);\r\n    let g = IntegerToHexString (color.g);\r\n    let b = IntegerToHexString (color.b);\r\n    let a = IntegerToHexString (color.a);\r\n    return r + g + b + a;\r\n}\r\n\r\nexport function HexStringToRGBColor (hexString)\r\n{\r\n    if (hexString.length !== 6) {\r\n        return null;\r\n    }\r\n\r\n    let r = parseInt (hexString.substring (0, 2), 16);\r\n    let g = parseInt (hexString.substring (2, 4), 16);\r\n    let b = parseInt (hexString.substring (4, 6), 16);\r\n    return new RGBColor (r, g, b);\r\n}\r\n\r\nexport function ArrayToRGBColor (arr)\r\n{\r\n\treturn new RGBColor (arr[0], arr[1], arr[2]);\r\n}\r\n\r\nexport function RGBColorIsEqual (a, b)\r\n{\r\n\treturn a.r === b.r && a.g === b.g && a.b === b.b;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}