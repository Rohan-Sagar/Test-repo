{"ast":null,"code":"export class TopologyVertex {\n  constructor() {\n    this.edges = [];\n    this.triangles = [];\n  }\n\n}\nexport class TopologyEdge {\n  constructor(vertex1, vertex2) {\n    this.vertex1 = vertex1;\n    this.vertex2 = vertex2;\n    this.triangles = [];\n  }\n\n}\nexport class TopologyTriangleEdge {\n  constructor(edge, reversed) {\n    this.edge = edge;\n    this.reversed = reversed;\n  }\n\n}\nexport class TopologyTriangle {\n  constructor() {\n    this.triEdge1 = null;\n    this.triEdge2 = null;\n    this.triEdge3 = null;\n  }\n\n}\nexport class Topology {\n  constructor() {\n    this.vertices = [];\n    this.edges = [];\n    this.triangleEdges = [];\n    this.triangles = [];\n    this.edgeStartToEndVertexMap = new Map();\n  }\n\n  AddVertex() {\n    this.vertices.push(new TopologyVertex());\n    return this.vertices.length - 1;\n  }\n\n  AddTriangle(vertex1, vertex2, vertex3) {\n    function AddTriangleToVertex(vertices, vertexIndex, triangleIndex) {\n      let vertex = vertices[vertexIndex];\n      vertex.triangles.push(triangleIndex);\n    }\n\n    function AddEdgeToVertex(vertices, triangleEdges, vertexIndex, triangleEdgeIndex) {\n      let vertex = vertices[vertexIndex];\n      let triangleEdge = triangleEdges[triangleEdgeIndex];\n      vertex.edges.push(triangleEdge.edge);\n    }\n\n    function AddTriangleToEdge(edges, triangleEdges, triangleEdgeIndex, triangleIndex) {\n      let triangleEdge = triangleEdges[triangleEdgeIndex];\n      let edge = edges[triangleEdge.edge];\n      edge.triangles.push(triangleIndex);\n    }\n\n    let triangleIndex = this.triangles.length;\n    let triangle = new TopologyTriangle();\n    triangle.triEdge1 = this.AddTriangleEdge(vertex1, vertex2);\n    triangle.triEdge2 = this.AddTriangleEdge(vertex2, vertex3);\n    triangle.triEdge3 = this.AddTriangleEdge(vertex3, vertex1);\n    AddTriangleToVertex(this.vertices, vertex1, triangleIndex);\n    AddTriangleToVertex(this.vertices, vertex2, triangleIndex);\n    AddTriangleToVertex(this.vertices, vertex3, triangleIndex);\n    AddEdgeToVertex(this.vertices, this.triangleEdges, vertex1, triangle.triEdge1);\n    AddEdgeToVertex(this.vertices, this.triangleEdges, vertex2, triangle.triEdge2);\n    AddEdgeToVertex(this.vertices, this.triangleEdges, vertex3, triangle.triEdge3);\n    AddTriangleToEdge(this.edges, this.triangleEdges, triangle.triEdge1, triangleIndex);\n    AddTriangleToEdge(this.edges, this.triangleEdges, triangle.triEdge2, triangleIndex);\n    AddTriangleToEdge(this.edges, this.triangleEdges, triangle.triEdge3, triangleIndex);\n    this.triangles.push(triangle);\n  }\n\n  AddTriangleEdge(vertex1, vertex2) {\n    let startVertex = vertex1;\n    let endVertex = vertex2;\n    let reversed = false;\n\n    if (vertex2 < vertex1) {\n      startVertex = vertex2;\n      endVertex = vertex1;\n      reversed = true;\n    }\n\n    let edgeIndex = this.AddEdge(startVertex, endVertex);\n    this.triangleEdges.push(new TopologyTriangleEdge(edgeIndex, reversed));\n    return this.triangleEdges.length - 1;\n  }\n\n  AddEdge(startVertex, endVertex) {\n    if (!this.edgeStartToEndVertexMap.has(startVertex)) {\n      this.edgeStartToEndVertexMap.set(startVertex, []);\n    }\n\n    let endVertices = this.edgeStartToEndVertexMap.get(startVertex);\n\n    for (let i = 0; i < endVertices.length; i++) {\n      let endVertexItem = endVertices[i];\n\n      if (endVertexItem.endVertex === endVertex) {\n        return endVertexItem.edgeIndex;\n      }\n    }\n\n    let edgeIndex = this.edges.length;\n    endVertices.push({\n      endVertex: endVertex,\n      edgeIndex: edgeIndex\n    });\n    this.edges.push(new TopologyEdge(startVertex, endVertex));\n    return edgeIndex;\n  }\n\n}","map":{"version":3,"names":["TopologyVertex","constructor","edges","triangles","TopologyEdge","vertex1","vertex2","TopologyTriangleEdge","edge","reversed","TopologyTriangle","triEdge1","triEdge2","triEdge3","Topology","vertices","triangleEdges","edgeStartToEndVertexMap","Map","AddVertex","push","length","AddTriangle","vertex3","AddTriangleToVertex","vertexIndex","triangleIndex","vertex","AddEdgeToVertex","triangleEdgeIndex","triangleEdge","AddTriangleToEdge","triangle","AddTriangleEdge","startVertex","endVertex","edgeIndex","AddEdge","has","set","endVertices","get","i","endVertexItem"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/model/topology.js"],"sourcesContent":["export class TopologyVertex\r\n{\r\n    constructor ()\r\n    {\r\n        this.edges = [];\r\n        this.triangles = [];\r\n    }\r\n}\r\n\r\nexport class TopologyEdge\r\n{\r\n    constructor (vertex1, vertex2)\r\n    {\r\n        this.vertex1 = vertex1;\r\n        this.vertex2 = vertex2;\r\n        this.triangles = [];\r\n    }\r\n}\r\n\r\nexport class TopologyTriangleEdge\r\n{\r\n    constructor (edge, reversed)\r\n    {\r\n        this.edge = edge;\r\n        this.reversed = reversed;\r\n    }\r\n}\r\n\r\nexport class TopologyTriangle\r\n{\r\n    constructor ()\r\n    {\r\n        this.triEdge1 = null;\r\n        this.triEdge2 = null;\r\n        this.triEdge3 = null;\r\n    }\r\n}\r\n\r\nexport class Topology\r\n{\r\n    constructor ()\r\n    {\r\n        this.vertices = [];\r\n        this.edges = [];\r\n        this.triangleEdges = [];\r\n        this.triangles = [];\r\n        this.edgeStartToEndVertexMap = new Map ();\r\n    }\r\n\r\n    AddVertex ()\r\n    {\r\n        this.vertices.push (new TopologyVertex ());\r\n        return this.vertices.length - 1;\r\n    }\r\n\r\n    AddTriangle (vertex1, vertex2, vertex3)\r\n    {\r\n        function AddTriangleToVertex (vertices, vertexIndex, triangleIndex)\r\n        {\r\n            let vertex = vertices[vertexIndex];\r\n            vertex.triangles.push (triangleIndex);\r\n        }\r\n\r\n        function AddEdgeToVertex (vertices, triangleEdges, vertexIndex, triangleEdgeIndex)\r\n        {\r\n            let vertex = vertices[vertexIndex];\r\n            let triangleEdge = triangleEdges[triangleEdgeIndex];\r\n            vertex.edges.push (triangleEdge.edge);\r\n        }\r\n\r\n        function AddTriangleToEdge (edges, triangleEdges, triangleEdgeIndex, triangleIndex)\r\n        {\r\n            let triangleEdge = triangleEdges[triangleEdgeIndex];\r\n            let edge = edges[triangleEdge.edge];\r\n            edge.triangles.push (triangleIndex);\r\n        }\r\n\r\n        let triangleIndex = this.triangles.length;\r\n\r\n        let triangle = new TopologyTriangle ();\r\n        triangle.triEdge1 = this.AddTriangleEdge (vertex1, vertex2);\r\n        triangle.triEdge2 = this.AddTriangleEdge (vertex2, vertex3);\r\n        triangle.triEdge3 = this.AddTriangleEdge (vertex3, vertex1);\r\n\r\n        AddTriangleToVertex (this.vertices, vertex1, triangleIndex);\r\n        AddTriangleToVertex (this.vertices, vertex2, triangleIndex);\r\n        AddTriangleToVertex (this.vertices, vertex3, triangleIndex);\r\n\r\n        AddEdgeToVertex (this.vertices, this.triangleEdges, vertex1, triangle.triEdge1);\r\n        AddEdgeToVertex (this.vertices, this.triangleEdges, vertex2, triangle.triEdge2);\r\n        AddEdgeToVertex (this.vertices, this.triangleEdges, vertex3, triangle.triEdge3);\r\n\r\n        AddTriangleToEdge (this.edges, this.triangleEdges, triangle.triEdge1, triangleIndex);\r\n        AddTriangleToEdge (this.edges, this.triangleEdges, triangle.triEdge2, triangleIndex);\r\n        AddTriangleToEdge (this.edges, this.triangleEdges, triangle.triEdge3, triangleIndex);\r\n\r\n        this.triangles.push (triangle);\r\n    }\r\n\r\n    AddTriangleEdge (vertex1, vertex2)\r\n    {\r\n        let startVertex = vertex1;\r\n        let endVertex = vertex2;\r\n        let reversed = false;\r\n        if (vertex2 < vertex1) {\r\n            startVertex = vertex2;\r\n            endVertex = vertex1;\r\n            reversed = true;\r\n        }\r\n\r\n        let edgeIndex = this.AddEdge (startVertex, endVertex);\r\n        this.triangleEdges.push (new TopologyTriangleEdge (edgeIndex, reversed));\r\n        return this.triangleEdges.length - 1;\r\n    }\r\n\r\n    AddEdge (startVertex, endVertex)\r\n    {\r\n        if (!this.edgeStartToEndVertexMap.has (startVertex)) {\r\n            this.edgeStartToEndVertexMap.set (startVertex, []);\r\n        }\r\n\r\n        let endVertices = this.edgeStartToEndVertexMap.get (startVertex);\r\n        for (let i = 0; i < endVertices.length; i++) {\r\n            let endVertexItem = endVertices[i];\r\n            if (endVertexItem.endVertex === endVertex) {\r\n                return endVertexItem.edgeIndex;\r\n            }\r\n        }\r\n\r\n        let edgeIndex = this.edges.length;\r\n        endVertices.push ({\r\n            endVertex : endVertex,\r\n            edgeIndex : edgeIndex\r\n        });\r\n\r\n        this.edges.push (new TopologyEdge (startVertex, endVertex));\r\n        return edgeIndex;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}