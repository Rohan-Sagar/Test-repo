{"ast":null,"code":"export class EventNotifier {\n  constructor() {\n    this.eventListeners = new Map();\n  }\n\n  AddEventListener(eventId, listener) {\n    if (!this.eventListeners.has(eventId)) {\n      this.eventListeners.set(eventId, []);\n    }\n\n    let listeners = this.eventListeners.get(eventId);\n    listeners.push(listener);\n  }\n\n  HasEventListener(eventId) {\n    return this.eventListeners.has(eventId);\n  }\n\n  GetEventNotifier(eventId) {\n    return () => {\n      this.NotifyEventListeners(eventId);\n    };\n  }\n\n  NotifyEventListeners(eventId) {\n    if (!this.eventListeners.has(eventId)) {\n      return;\n    }\n\n    let listeners = this.eventListeners.get(eventId);\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (let listener of listeners) {\n      listener(...args);\n    }\n  }\n\n}","map":{"version":3,"names":["EventNotifier","constructor","eventListeners","Map","AddEventListener","eventId","listener","has","set","listeners","get","push","HasEventListener","GetEventNotifier","NotifyEventListeners","args"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/core/eventnotifier.js"],"sourcesContent":["export class EventNotifier\r\n{\r\n    constructor ()\r\n    {\r\n        this.eventListeners = new Map ();\r\n    }\r\n\r\n    AddEventListener (eventId, listener)\r\n    {\r\n        if (!this.eventListeners.has (eventId)) {\r\n            this.eventListeners.set (eventId, []);\r\n        }\r\n        let listeners = this.eventListeners.get (eventId);\r\n        listeners.push (listener);\r\n    }\r\n\r\n    HasEventListener (eventId)\r\n    {\r\n        return this.eventListeners.has (eventId);\r\n    }\r\n\r\n    GetEventNotifier (eventId)\r\n    {\r\n        return () => {\r\n            this.NotifyEventListeners (eventId);\r\n        };\r\n    }\r\n\r\n    NotifyEventListeners (eventId, ...args)\r\n    {\r\n        if (!this.eventListeners.has (eventId)) {\r\n            return;\r\n        }\r\n        let listeners = this.eventListeners.get (eventId);\r\n        for (let listener of listeners) {\r\n            listener (...args);\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAN,CACP;EACIC,WAAW,GACX;IACI,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;EACH;;EAEDC,gBAAgB,CAAEC,OAAF,EAAWC,QAAX,EAChB;IACI,IAAI,CAAC,KAAKJ,cAAL,CAAoBK,GAApB,CAAyBF,OAAzB,CAAL,EAAwC;MACpC,KAAKH,cAAL,CAAoBM,GAApB,CAAyBH,OAAzB,EAAkC,EAAlC;IACH;;IACD,IAAII,SAAS,GAAG,KAAKP,cAAL,CAAoBQ,GAApB,CAAyBL,OAAzB,CAAhB;IACAI,SAAS,CAACE,IAAV,CAAgBL,QAAhB;EACH;;EAEDM,gBAAgB,CAAEP,OAAF,EAChB;IACI,OAAO,KAAKH,cAAL,CAAoBK,GAApB,CAAyBF,OAAzB,CAAP;EACH;;EAEDQ,gBAAgB,CAAER,OAAF,EAChB;IACI,OAAO,MAAM;MACT,KAAKS,oBAAL,CAA2BT,OAA3B;IACH,CAFD;EAGH;;EAEDS,oBAAoB,CAAET,OAAF,EACpB;IACI,IAAI,CAAC,KAAKH,cAAL,CAAoBK,GAApB,CAAyBF,OAAzB,CAAL,EAAwC;MACpC;IACH;;IACD,IAAII,SAAS,GAAG,KAAKP,cAAL,CAAoBQ,GAApB,CAAyBL,OAAzB,CAAhB;;IAJJ,kCADkCU,IAClC;MADkCA,IAClC;IAAA;;IAKI,KAAK,IAAIT,QAAT,IAAqBG,SAArB,EAAgC;MAC5BH,QAAQ,CAAE,GAAGS,IAAL,CAAR;IACH;EACJ;;AApCL"},"metadata":{},"sourceType":"module"}