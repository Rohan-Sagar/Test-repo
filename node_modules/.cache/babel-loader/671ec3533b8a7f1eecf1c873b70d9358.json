{"ast":null,"code":"export const FileSource = {\n  Url: 1,\n  File: 2,\n  Decompressed: 3\n};\nexport const FileFormat = {\n  Text: 1,\n  Binary: 2\n};\nexport function GetFileName(filePath) {\n  let firstSeparator = filePath.lastIndexOf('/');\n\n  if (firstSeparator === -1) {\n    firstSeparator = filePath.lastIndexOf('\\\\');\n  }\n\n  let fileName = filePath;\n\n  if (firstSeparator !== -1) {\n    fileName = filePath.substring(firstSeparator + 1);\n  }\n\n  let firstParamIndex = fileName.indexOf('?');\n\n  if (firstParamIndex !== -1) {\n    fileName = fileName.substring(0, firstParamIndex);\n  }\n\n  return decodeURI(fileName);\n}\nexport function GetFileExtension(filePath) {\n  let fileName = GetFileName(filePath);\n  let firstPoint = fileName.lastIndexOf('.');\n\n  if (firstPoint === -1) {\n    return '';\n  }\n\n  let extension = fileName.substring(firstPoint + 1);\n  return extension.toLowerCase();\n}\nexport function RequestUrl(url, onProgress) {\n  return new Promise((resolve, reject) => {\n    let request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onprogress = event => {\n      onProgress(event.loaded, event.total);\n    };\n\n    request.onload = () => {\n      if (request.status === 200) {\n        resolve(request.response);\n      } else {\n        reject();\n      }\n    };\n\n    request.onerror = () => {\n      reject();\n    };\n\n    request.responseType = 'arraybuffer';\n    request.send(null);\n  });\n}\nexport function ReadFile(file, onProgress) {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n\n    reader.onprogress = event => {\n      onProgress(event.loaded, event.total);\n    };\n\n    reader.onloadend = event => {\n      if (event.target.readyState === FileReader.DONE) {\n        resolve(event.target.result);\n      }\n    };\n\n    reader.onerror = () => {\n      reject();\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n}\nexport function TransformFileHostUrls(urls) {\n  for (let i = 0; i < urls.length; i++) {\n    let url = urls[i];\n\n    if (url.search(/www\\.dropbox\\.com/u) !== -1) {\n      url = url.replace('www.dropbox.com', 'dl.dropbox.com');\n      let separatorPos = url.indexOf('?');\n\n      if (separatorPos !== -1) {\n        url = url.substring(0, separatorPos);\n      }\n\n      urls[i] = url;\n    } else if (url.search(/github\\.com/u) !== -1) {\n      url = url.replace('github.com', 'raw.githubusercontent.com');\n      url = url.replace('/blob', '');\n      let separatorPos = url.indexOf('?');\n\n      if (separatorPos !== -1) {\n        url = url.substring(0, separatorPos);\n      }\n\n      urls[i] = url;\n    }\n  }\n}\nexport function IsUrl(str) {\n  const regex = /^https?:\\/\\/\\S+$/g;\n  const match = str.match(regex);\n  return match !== null;\n}","map":{"version":3,"names":["FileSource","Url","File","Decompressed","FileFormat","Text","Binary","GetFileName","filePath","firstSeparator","lastIndexOf","fileName","substring","firstParamIndex","indexOf","decodeURI","GetFileExtension","firstPoint","extension","toLowerCase","RequestUrl","url","onProgress","Promise","resolve","reject","request","XMLHttpRequest","open","onprogress","event","loaded","total","onload","status","response","onerror","responseType","send","ReadFile","file","reader","FileReader","onloadend","target","readyState","DONE","result","readAsArrayBuffer","TransformFileHostUrls","urls","i","length","search","replace","separatorPos","IsUrl","str","regex","match"],"sources":["/Users/rohansagar/Desktop/node+react/client/node-react-3d/node_modules/online-3d-viewer/source/engine/io/fileutils.js"],"sourcesContent":["export const FileSource =\r\n{\r\n    Url : 1,\r\n    File : 2,\r\n\tDecompressed : 3\r\n};\r\n\r\nexport const FileFormat =\r\n{\r\n    Text : 1,\r\n    Binary : 2\r\n};\r\n\r\nexport function GetFileName (filePath)\r\n{\r\n\tlet firstSeparator = filePath.lastIndexOf ('/');\r\n\tif (firstSeparator === -1) {\r\n\t\tfirstSeparator = filePath.lastIndexOf ('\\\\');\r\n\t}\r\n\tlet fileName = filePath;\r\n\tif (firstSeparator !== -1) {\r\n\t\tfileName = filePath.substring (firstSeparator + 1);\r\n\t}\r\n\tlet firstParamIndex = fileName.indexOf ('?');\r\n\tif (firstParamIndex !== -1) {\r\n\t\tfileName = fileName.substring (0, firstParamIndex);\r\n\t}\r\n\treturn decodeURI (fileName);\r\n}\r\n\r\nexport function GetFileExtension (filePath)\r\n{\r\n\tlet fileName = GetFileName (filePath);\r\n\tlet firstPoint = fileName.lastIndexOf ('.');\r\n\tif (firstPoint === -1) {\r\n\t\treturn '';\r\n\t}\r\n\tlet extension = fileName.substring (firstPoint + 1);\r\n\treturn extension.toLowerCase ();\r\n}\r\n\r\nexport function RequestUrl (url, onProgress)\r\n{\r\n\treturn new Promise ((resolve, reject) => {\r\n\t\tlet request = new XMLHttpRequest ();\r\n\t\trequest.open ('GET', url, true);\r\n\r\n\t\trequest.onprogress = (event) => {\r\n\t\t\tonProgress (event.loaded, event.total);\r\n\t\t};\r\n\r\n\t\trequest.onload = () => {\r\n\t\t\tif (request.status === 200) {\r\n\t\t\t\tresolve (request.response);\r\n\t\t\t} else {\r\n\t\t\t\treject ();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trequest.onerror = () => {\r\n\t\t\treject ();\r\n\t\t};\r\n\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.send (null);\r\n\t});\r\n}\r\n\r\nexport function ReadFile (file, onProgress)\r\n{\r\n\treturn new Promise ((resolve, reject) => {\r\n\t\tlet reader = new FileReader ();\r\n\r\n\t\treader.onprogress = (event) => {\r\n\t\t\tonProgress (event.loaded, event.total);\r\n\t\t};\r\n\r\n\t\treader.onloadend = (event) => {\r\n\t\t\tif (event.target.readyState === FileReader.DONE) {\r\n\t\t\t\tresolve (event.target.result);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treader.onerror = () => {\r\n\t\t\treject ();\r\n\t\t};\r\n\r\n\t\treader.readAsArrayBuffer (file);\r\n\t});\r\n}\r\n\r\nexport function TransformFileHostUrls (urls)\r\n{\r\n    for (let i = 0; i < urls.length; i++) {\r\n        let url = urls[i];\r\n        if (url.search (/www\\.dropbox\\.com/u) !== -1) {\r\n            url = url.replace ('www.dropbox.com', 'dl.dropbox.com');\r\n            let separatorPos = url.indexOf ('?');\r\n            if (separatorPos !== -1) {\r\n                url = url.substring (0, separatorPos);\r\n            }\r\n            urls[i] = url;\r\n        } else if (url.search (/github\\.com/u) !== -1) {\r\n            url = url.replace ('github.com', 'raw.githubusercontent.com');\r\n            url = url.replace ('/blob', '');\r\n            let separatorPos = url.indexOf ('?');\r\n            if (separatorPos !== -1) {\r\n                url = url.substring (0, separatorPos);\r\n            }\r\n            urls[i] = url;\r\n        }\r\n    }\r\n}\r\n\r\nexport function IsUrl (str)\r\n{\r\n\tconst regex = /^https?:\\/\\/\\S+$/g;\r\n\tconst match = str.match (regex);\r\n\treturn match !== null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}